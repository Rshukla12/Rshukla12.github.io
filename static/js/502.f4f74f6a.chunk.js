"use strict";(self.webpackChunkmy_portfolio=self.webpackChunkmy_portfolio||[]).push([[502],{8502:function(e,r,n){n.r(r);n(2791);var s=n(7022),t=n(9743),i=n(2677),o=n(9140),c=n(184);r.default=function(){return(0,c.jsx)(s.Z,{id:"code-snippets",fluid:!0,className:"about-section second-color",children:(0,c.jsxs)(s.Z,{children:[(0,c.jsxs)("h1",{className:"project-heading",children:["Technical ",(0,c.jsx)("strong",{className:"purple",children:"Excellence"})]}),(0,c.jsx)("p",{style:{color:"white",marginBottom:"2rem"},children:"Code snippets showcasing backend optimization and distributed systems expertise."}),(0,c.jsx)(t.Z,{style:{justifyContent:"center",gap:"1rem"},children:[{title:"Kafka Consumer Example",language:"java",code:'@KafkaListener(topics = "user-events")\npublic void handleUserEvent(ConsumerRecord<String, String> record) {\n    try {\n        UserEvent event = objectMapper.readValue(record.value(), UserEvent.class);\n        // Process 20M+ daily events\n        eventProcessor.process(event);\n    } catch (Exception e) {\n        log.error("Error processing event: {}", e.getMessage());\n    }\n}',description:"High-throughput Kafka consumer handling 20M+ daily events"},{title:"Elasticsearch Query Optimization",language:"json",code:'{\n  "query": {\n    "bool": {\n      "must": [\n        {"match": {"content": "search_term"}},\n        {"range": {"timestamp": {"gte": "now-7d"}}}\n      ],\n      "filter": [\n        {"term": {"status": "active"}}\n      ]\n    }\n  },\n  "aggs": {\n    "categories": {\n      "terms": {"field": "category.keyword"}\n    }\n  }\n}',description:"Optimized Elasticsearch query reducing infrastructure costs by 12%"},{title:"Redis Caching Layer",language:"java",code:'@Cacheable(value = "userProfile", key = "#userId")\npublic UserProfile getUserProfile(String userId) {\n    // Cache hit reduces latency by 50%\n    return userRepository.findById(userId)\n        .orElseThrow(() -> new UserNotFoundException(userId));\n}\n\n@CacheEvict(value = "userProfile", key = "#userId")\npublic void updateUserProfile(String userId, UserProfile profile) {\n    userRepository.save(profile);\n}',description:"Redis caching implementation reducing latency by 50%"}].map((function(e,r){return(0,c.jsx)(i.Z,{xs:12,lg:8,className:"project-card",children:(0,c.jsx)(o.Z,{className:"project-card-view",children:(0,c.jsxs)(o.Z.Body,{children:[(0,c.jsx)(o.Z.Title,{style:{fontWeight:"bold",fontSize:"1.3rem",color:"#c770f0",marginBottom:"1rem"},children:e.title}),(0,c.jsx)(o.Z.Text,{style:{fontSize:"0.9rem",color:"#888",marginBottom:"1rem"},children:e.description}),(0,c.jsx)("pre",{style:{backgroundColor:"#1a1a1a",color:"#f8f8f2",padding:"1rem",borderRadius:"5px",fontSize:"0.85rem",overflowX:"auto",border:"1px solid #333"},children:(0,c.jsx)("code",{children:e.code})})]})})},r)}))})]})})}}}]);
//# sourceMappingURL=502.f4f74f6a.chunk.js.map