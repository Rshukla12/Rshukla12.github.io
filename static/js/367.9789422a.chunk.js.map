{"version":3,"file":"static/js/367.9789422a.chunk.js","mappings":"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","sources":["components/Skills/Github.js","components/Skills/Techstack.js","components/Skills/Skills.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Row } from \"react-bootstrap\";\n\nfunction Github() {\n  const [contributions, setContributions] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Fetch GitHub contributions data\n    const fetchContributions = async () => {\n      try {\n        const response = await fetch('https://api.github.com/users/rshukla12/events');\n        const data = await response.json();\n        \n        // Process the data to create a simple contribution visualization\n        const contributionData = processContributions(data);\n        setContributions(contributionData);\n      } catch (error) {\n        console.error('Error fetching GitHub data:', error);\n        // Fallback to mock data\n        setContributions(generateMockContributions());\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchContributions();\n  }, []);\n\n  const processContributions = (data) => {\n    // Process GitHub events to create contribution data\n    const contributions = [];\n    const today = new Date();\n    \n    for (let i = 0; i < 365; i++) {\n      const date = new Date(today);\n      date.setDate(date.getDate() - i);\n      \n      const dayData = data.filter(event => {\n        const eventDate = new Date(event.created_at);\n        return eventDate.toDateString() === date.toDateString();\n      });\n      \n      contributions.unshift({\n        date: date.toISOString().split('T')[0],\n        count: dayData.length,\n        level: dayData.length > 0 ? Math.min(dayData.length, 4) : 0\n      });\n    }\n    \n    return contributions;\n  };\n\n  const generateMockContributions = () => {\n    const contributions = [];\n    const today = new Date();\n    \n    for (let i = 0; i < 365; i++) {\n      const date = new Date(today);\n      date.setDate(date.getDate() - i);\n      \n      // Generate some random activity\n      const random = Math.random();\n      let level = 0;\n      if (random > 0.8) level = 4;\n      else if (random > 0.6) level = 3;\n      else if (random > 0.4) level = 2;\n      else if (random > 0.2) level = 1;\n      \n      contributions.unshift({\n        date: date.toISOString().split('T')[0],\n        count: level,\n        level: level\n      });\n    }\n    \n    return contributions;\n  };\n\n  const getColor = (level) => {\n    const colors = [\n      '#ebedf0', // No activity\n      '#9be9a8', // Low activity\n      '#40c463', // Medium activity\n      '#30a14e', // High activity\n      '#216e39'  // Very high activity\n    ];\n    return colors[level] || colors[0];\n  };\n\n  if (loading) {\n    return (\n      <Row style={{ justifyContent: \"center\", paddingBottom: \"10px\" }}>\n        <h1 className=\"project-heading\" style={{ paddingBottom: \"20px\" }}>\n          Days I <strong className=\"purple\">Code</strong>\n        </h1>\n        <div style={{ textAlign: \"center\", color: \"white\" }}>\n          Loading GitHub activity...\n        </div>\n      </Row>\n    );\n  }\n\n  return (\n    <Row style={{ justifyContent: \"center\", paddingBottom: \"10px\" }}>\n      <h1 className=\"project-heading\" style={{ paddingBottom: \"20px\" }}>\n        Days I <strong className=\"purple\">Code</strong>\n      </h1>\n      <div style={{ \n        display: \"flex\", \n        flexWrap: \"wrap\", \n        justifyContent: \"center\",\n        maxWidth: \"800px\",\n        gap: \"2px\"\n      }}>\n        {contributions.map((contribution, index) => (\n          <div\n            key={index}\n            style={{\n              width: \"12px\",\n              height: \"12px\",\n              backgroundColor: getColor(contribution.level),\n              borderRadius: \"2px\",\n              margin: \"1px\",\n              transition: \"all 0.2s ease\"\n            }}\n            title={`${contribution.date}: ${contribution.count} contributions`}\n          />\n        ))}\n      </div>\n      <div style={{ \n        marginTop: \"20px\", \n        fontSize: \"14px\", \n        color: \"#888\",\n        textAlign: \"center\" \n      }}>\n        <span style={{ display: \"inline-block\", marginRight: \"20px\" }}>\n          <span style={{ \n            display: \"inline-block\", \n            width: \"12px\", \n            height: \"12px\", \n            backgroundColor: \"#ebedf0\", \n            marginRight: \"5px\" \n          }}></span>\n          Less\n        </span>\n        <span style={{ \n          display: \"inline-block\", \n          width: \"12px\", \n          height: \"12px\", \n          backgroundColor: \"#216e39\", \n          marginRight: \"5px\" \n        }}></span>\n        More\n      </div>\n    </Row>\n  );\n}\n\nexport default Github;\n","import React from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport {\n  DiJavascript1,\n  DiReact,\n  DiNodejs,\n  DiMongodb,\n  DiPython,\n  DiJava,\n  DiHtml5,\n  DiCss3Full\n} from \"react-icons/di\";\n\nimport {\n  SiMaterialui,\n  SiExpress,\n  SiApachekafka,\n  SiRedis,\n  SiElasticsearch,\n  SiAmazonaws,\n  SiGit,\n  SiGithub\n} from \"react-icons/si\";\n\nconst languages = [\n  {\n    icon: <DiJava />,\n    label: \"Java\",\n  },\n  {\n    icon: <DiJavascript1 />,\n    label: \"JavaScript\",\n  },\n  {\n    icon: <DiPython />,\n    label: \"Python\",\n  }\n];\n\nconst frameworks = [\n  {\n    icon: <DiNodejs />,\n    label: \"Node.js\",\n  },\n  {\n    icon: <SiExpress />,\n    label: \"Express\",\n  }\n];\n\nconst infrastructure = [\n  {\n    icon: <SiApachekafka />,\n    label: \"Kafka\",\n  },\n  {\n    icon: <SiRedis />,\n    label: \"Redis\",\n  },\n  {\n    icon: <DiMongodb />,\n    label: \"MongoDB\",\n  },\n  {\n    icon: <SiElasticsearch />,\n    label: \"Elasticsearch\",\n  }\n];\n\nconst tools = [\n  {\n    icon: <SiAmazonaws />,\n    label: \"AWS EC2\",\n  },\n  {\n    icon: <SiGit />,\n    label: \"Git\",\n  },\n  {\n    icon: <SiGithub />,\n    label: \"GitHub\",\n  }\n];\n\nconst frontendStacks = [\n  {\n    icon: <DiReact />,\n    label: \"React\",\n  },\n  {\n    icon: <SiMaterialui />,\n    label: \"Material UI\",\n  },\n  {\n    icon: <DiHtml5/>,\n    label: \"HTML\",\n  },\n  {\n    icon: <DiCss3Full />,\n    label: \"CSS\",\n  }\n];\n\nfunction Techstack() {\n  return (\n    <>\n      <h1 className=\"project-heading\">\n        Languages\n      </h1>\n      <Row style={{ justifyContent: \"center\", paddingBottom: \"50px\" }}>\n        {\n          languages.map(stack => (\n            <Col key={stack.label} xs={4} md={2} className=\"tech-icons\">\n              <div className=\"skill glass light\">\n                {stack.icon}\n                <p>{stack.label}</p>\n              </div>\n            </Col>\n          ))\n        }\n      </Row>\n      \n      <h1 className=\"project-heading\">\n        Frameworks\n      </h1>\n      <Row style={{ justifyContent: \"center\", paddingBottom: \"50px\" }}>\n        {\n          frameworks.map(stack => (\n            <Col key={stack.label} xs={4} md={2} className=\"tech-icons\">\n              <div className=\"skill glass light\">\n                {stack.icon}\n                <p>{stack.label}</p>\n              </div>\n            </Col>\n          ))\n        }\n      </Row>\n      \n      <h1 className=\"project-heading\">\n        Infrastructure\n      </h1>\n      <Row style={{ justifyContent: \"center\", paddingBottom: \"50px\" }}>\n        {\n          infrastructure.map(stack => (\n            <Col key={stack.label} xs={4} md={2} className=\"tech-icons\">\n              <div className=\"skill glass light\">\n                {stack.icon}\n                <p>{stack.label}</p>\n              </div>\n            </Col>\n          ))\n        }\n      </Row>\n      \n      <h1 className=\"project-heading\">\n        Tools\n      </h1>\n      <Row style={{ justifyContent: \"center\", paddingBottom: \"50px\" }}>\n        {\n          tools.map(stack => (\n            <Col key={stack.label} xs={4} md={2} className=\"tech-icons\">\n              <div className=\"skill glass light\">\n                {stack.icon}\n                <p>{stack.label}</p>\n              </div>\n            </Col>\n          ))\n        }\n      </Row>\n      \n      <h1 className=\"project-heading\">\n        Frontend\n      </h1>\n      <Row style={{ justifyContent: \"center\", paddingBottom: \"50px\" }}>\n        {\n          frontendStacks.map(stack => (\n            <Col key={stack.label} xs={4} md={2} className=\"tech-icons\">\n              <div className=\"skill glass light\">\n                {stack.icon}\n                <p>{stack.label}</p>\n              </div>\n            </Col>\n          ))\n        }\n      </Row>\n      \n    </>\n  );\n}\n\nexport default Techstack;\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport Github from \"./Github\";\nimport Techstack from \"./Techstack\";\n\nfunction Skills() {\n  return (\n    <Container id=\"skills\" fluid className=\"about-section second-color\">\n      <h1 className=\"project-heading\">\n        Professional <strong className=\"purple\">Skillset </strong>\n      </h1>\n\n      <Techstack />\n\n      <Github />\n    </Container>\n  );\n}\n\nexport default Skills;\n"],"names":["useState","contributions","setContributions","loading","setLoading","useEffect","fetchContributions","fetch","response","json","data","contributionData","processContributions","console","error","generateMockContributions","today","Date","i","date","setDate","getDate","dayData","filter","event","created_at","toDateString","unshift","toISOString","split","count","length","level","Math","min","random","getColor","colors","Row","style","justifyContent","paddingBottom","className","textAlign","color","display","flexWrap","maxWidth","gap","map","contribution","index","width","height","backgroundColor","borderRadius","margin","transition","title","marginTop","fontSize","marginRight","languages","icon","label","frameworks","infrastructure","tools","frontendStacks","stack","Col","xs","md","Container","id","fluid"],"sourceRoot":""}