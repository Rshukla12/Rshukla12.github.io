{"version":3,"file":"static/js/367.1d2f5f03.chunk.js","mappings":"+OAwKA,MArKA,WACE,OAA0CA,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAkB,mCAAG,wGAEjBC,EAAY,CAAC,YAAa,iBAFT,SAGDC,QAAQC,IAC5BF,EAAUG,KAAI,SAAAC,GAAQ,OACpBC,MAAM,gCAAD,OAAiCD,EAAjC,YAAoDE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,cALtD,OAGjBC,EAHiB,OASjBC,EAASC,EAAmBF,EAAQ,GAAIA,EAAQ,IACtDd,EAAiBe,GAVM,gDAYvBE,QAAQC,MAAM,8BAAd,MAEAlB,EAAiBmB,KAdM,yBAgBvBjB,GAAW,GAhBY,4EAAH,qDAoBxBE,MACC,IAGH,IAAMY,EAAqB,SAACI,EAAOC,GACjC,IAAMC,EAAQ,IAAIC,KACZC,EAAU,GAEVC,EAAY,SAACC,GACjBA,EAAKC,SAAQ,SAAAC,GACX,IAAMC,EAAO,IAAIN,KAAKK,EAAME,YAAYC,cAAcC,MAAM,KAAK,GACjER,EAAQK,IAASL,EAAQK,IAAS,GAAK,MAG3CJ,EAAUL,GACVK,EAAUJ,GAGV,IADA,IAAMtB,EAAgB,GACbkC,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC5B,IAAMJ,EAAO,IAAIN,KAAKD,GACtBO,EAAKK,QAAQL,EAAKM,UAAYF,GAC9B,IAAMG,EAAUP,EAAKE,cAAcC,MAAM,KAAK,GACxCK,EAAQb,EAAQY,IAAY,EAClCrC,EAAcuC,QAAQ,CACpBT,KAAMO,EACNC,MAAAA,EACAE,MAAOF,EAAQ,EAAIG,KAAKC,IAAIJ,EAAO,GAAK,IAI5C,OAAOtC,GAGHoB,EAA4B,WAIhC,IAHA,IAAMpB,EAAgB,GAChBuB,EAAQ,IAAIC,KAETU,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC5B,IAAMJ,EAAO,IAAIN,KAAKD,GACtBO,EAAKK,QAAQL,EAAKM,UAAYF,GAG9B,IAAMS,EAASF,KAAKE,SAChBH,EAAQ,EACRG,EAAS,GAAKH,EAAQ,EACjBG,EAAS,GAAKH,EAAQ,EACtBG,EAAS,GAAKH,EAAQ,EACtBG,EAAS,KAAKH,EAAQ,GAE/BxC,EAAcuC,QAAQ,CACpBT,KAAMA,EAAKE,cAAcC,MAAM,KAAK,GACpCK,MAAOE,EACPA,MAAOA,IAIX,OAAOxC,GAGH4C,EAAW,SAACJ,GAChB,IAAMK,EAAS,CACb,UACA,UACA,UACA,UACA,WAEF,OAAOA,EAAOL,IAAUK,EAAO,IAGjC,OAAI3C,GAEA,UAAC4C,EAAA,EAAD,CAAKC,MAAO,CAAEC,eAAgB,SAAUC,cAAe,QAAvD,WACE,gBAAIC,UAAU,kBAAkBH,MAAO,CAAEE,cAAe,QAAxD,qBACS,mBAAQC,UAAU,SAAlB,sBAET,gBAAKH,MAAO,CAAEI,UAAW,SAAUC,MAAO,SAA1C,4CAQJ,UAACN,EAAA,EAAD,CAAKC,MAAO,CAAEC,eAAgB,SAAUC,cAAe,QAAvD,WACE,gBAAIC,UAAU,kBAAkBH,MAAO,CAAEE,cAAe,QAAxD,qBACS,mBAAQC,UAAU,SAAlB,sBAET,gBAAKH,MAAO,CACVM,QAAS,OACTC,SAAU,OACVN,eAAgB,SAChBO,SAAU,QACVC,IAAK,OALP,SAOGxD,EAAcS,KAAI,SAACgD,EAAcC,GAAf,OACjB,gBAEEX,MAAO,CACLY,MAAO,OACPC,OAAQ,OACRC,gBAAiBjB,EAASa,EAAajB,OACvCsB,aAAc,MACdC,OAAQ,MACRC,WAAY,iBAEdC,MAAK,UAAKR,EAAa3B,KAAlB,aAA2B2B,EAAanB,MAAxC,mBATAoB,SAaX,iBAAKX,MAAO,CACVmB,UAAW,OACXC,SAAU,OACVf,MAAO,OACPD,UAAW,UAJb,WAME,kBAAMJ,MAAO,CAAEM,QAAS,eAAgBe,YAAa,QAArD,WACE,iBAAMrB,MAAO,CACXM,QAAS,eACTM,MAAO,OACPC,OAAQ,OACRC,gBAAiB,UACjBO,YAAa,SANjB,WAUA,iBAAMrB,MAAO,CACXM,QAAS,eACTM,MAAO,OACPC,OAAQ,OACRC,gBAAiB,UACjBO,YAAa,SArBjB,c,6BCrHAC,EAAY,CAChB,CACEC,MAAM,SAAC,MAAD,IACNC,MAAO,QAET,CACED,MAAM,SAAC,MAAD,IACNC,MAAO,cAET,CACED,MAAM,SAAC,MAAD,IACNC,MAAO,WAILC,EAAa,CACjB,CACEF,MAAM,SAAC,MAAD,IACNC,MAAO,WAET,CACED,MAAM,SAAC,MAAD,IACNC,MAAO,YAILE,EAAiB,CACrB,CACEH,MAAM,SAAC,MAAD,IACNC,MAAO,SAET,CACED,MAAM,SAAC,MAAD,IACNC,MAAO,SAET,CACED,MAAM,SAAC,MAAD,IACNC,MAAO,WAET,CACED,MAAM,SAAC,MAAD,IACNC,MAAO,iBAET,CACED,MAAM,SAAC,MAAD,IACNC,MAAO,QAILG,EAAQ,CACZ,CACEJ,MAAM,SAAC,MAAD,IACNC,MAAO,WAET,CACED,MAAM,SAAC,MAAD,IACNC,MAAO,UAET,CACED,MAAM,SAAC,MAAD,IACNC,MAAO,OAET,CACED,MAAM,SAAC,MAAD,IACNC,MAAO,UAET,CACED,MAAM,SAAC,MAAD,IACNC,MAAO,YAuEX,MAnEA,WACE,OACE,iCACE,UAACzB,EAAA,EAAD,CAAKC,MAAO,CAAEC,eAAgB,SAAUC,cAAe,QAAvD,WACA,eAAIC,UAAU,kBAAkBH,MAAO,CAAEE,cAAe,QAAxD,uBAIIoB,EAAU5D,KAAI,SAAAkE,GAAK,OACjB,SAACC,EAAA,EAAD,CAAuBC,GAAI,EAAGC,GAAI,EAAG5B,UAAU,aAA/C,UACE,iBAAKA,UAAU,oBAAf,UACGyB,EAAML,MACP,uBAAIK,EAAMJ,YAHJI,EAAMJ,cAStB,UAACzB,EAAA,EAAD,CAAKC,MAAO,CAAEC,eAAgB,SAAUC,cAAe,QAAvD,WACA,eAAIC,UAAU,kBAAkBH,MAAO,CAAEE,cAAe,QAAxD,4BAIIwB,EAAehE,KAAI,SAAAkE,GAAK,OACtB,SAACC,EAAA,EAAD,CAAuBC,GAAI,EAAGC,GAAI,EAAG5B,UAAU,aAA/C,UACE,iBAAKA,UAAU,oBAAf,UACGyB,EAAML,MACP,uBAAIK,EAAMJ,YAHJI,EAAMJ,cAStB,UAACzB,EAAA,EAAD,CAAKC,MAAO,CAAEC,eAAgB,SAAUC,cAAe,QAAvD,WACA,eAAIC,UAAU,kBAAkBH,MAAO,CAAEE,cAAe,QAAxD,wBAIIuB,EAAW/D,KAAI,SAAAkE,GAAK,OAClB,SAACC,EAAA,EAAD,CAAuBC,GAAI,EAAGC,GAAI,EAAG5B,UAAU,aAA/C,UACE,iBAAKA,UAAU,oBAAf,UACGyB,EAAML,MACP,uBAAIK,EAAMJ,YAHJI,EAAMJ,cAStB,UAACzB,EAAA,EAAD,CAAKC,MAAO,CAAEC,eAAgB,SAAUC,cAAe,QAAvD,WACA,eAAIC,UAAU,kBAAkBH,MAAO,CAAEE,cAAe,QAAxD,mBAIIyB,EAAMjE,KAAI,SAAAkE,GAAK,OACb,SAACC,EAAA,EAAD,CAAuBC,GAAI,EAAGC,GAAI,EAAG5B,UAAU,aAA/C,UACE,iBAAKA,UAAU,oBAAf,UACGyB,EAAML,MACP,uBAAIK,EAAMJ,YAHJI,EAAMJ,iBCjI5B,MAdA,WACE,OACE,UAACQ,EAAA,EAAD,CAAWC,GAAG,SAASC,OAAK,EAAC/B,UAAU,6BAAvC,WACE,gBAAIA,UAAU,kBAAd,2BACe,mBAAQA,UAAU,SAAlB,2BAGf,SAAC,EAAD,KAEA,SAAC,EAAD","sources":["components/Skills/Github.js","components/Skills/Techstack.js","components/Skills/Skills.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Row } from \"react-bootstrap\";\n\nfunction Github() {\n  const [contributions, setContributions] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Fetch GitHub contributions data\n    const fetchContributions = async () => {\n      try {\n        const usernames = [\"rshukla12\", \"ravi-shukla-1\"];\n        const allData = await Promise.all(\n          usernames.map(username =>\n            fetch(`https://api.github.com/users/${username}/events`).then(res => res.json())\n          )\n        );\n        // Merge the data\n        const merged = mergeContributions(allData[0], allData[1]);\n        setContributions(merged);\n      } catch (error) {\n        console.error('Error fetching GitHub data:', error);\n        // Fallback to mock data\n        setContributions(generateMockContributions());\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchContributions();\n  }, []);\n\n  // Merge two event arrays into a date->count map\n  const mergeContributions = (data1, data2) => {\n    const today = new Date();\n    const dateMap = {};\n    // Helper to add events to map\n    const addEvents = (data) => {\n      data.forEach(event => {\n        const date = new Date(event.created_at).toISOString().split('T')[0];\n        dateMap[date] = (dateMap[date] || 0) + 1;\n      });\n    };\n    addEvents(data1);\n    addEvents(data2);\n    // Build 365-day array\n    const contributions = [];\n    for (let i = 0; i < 365; i++) {\n      const date = new Date(today);\n      date.setDate(date.getDate() - i);\n      const dateStr = date.toISOString().split('T')[0];\n      const count = dateMap[dateStr] || 0;\n      contributions.unshift({\n        date: dateStr,\n        count,\n        level: count > 0 ? Math.min(count, 4) : 0\n      });\n    }\n    \n    return contributions;\n  };\n\n  const generateMockContributions = () => {\n    const contributions = [];\n    const today = new Date();\n    \n    for (let i = 0; i < 365; i++) {\n      const date = new Date(today);\n      date.setDate(date.getDate() - i);\n      \n      // Generate some random activity\n      const random = Math.random();\n      let level = 0;\n      if (random > 0.8) level = 4;\n      else if (random > 0.6) level = 3;\n      else if (random > 0.4) level = 2;\n      else if (random > 0.2) level = 1;\n      \n      contributions.unshift({\n        date: date.toISOString().split('T')[0],\n        count: level,\n        level: level\n      });\n    }\n    \n    return contributions;\n  };\n\n  const getColor = (level) => {\n    const colors = [\n      '#ebedf0', // No activity\n      '#9be9a8', // Low activity\n      '#40c463', // Medium activity\n      '#30a14e', // High activity\n      '#216e39'  // Very high activity\n    ];\n    return colors[level] || colors[0];\n  };\n\n  if (loading) {\n    return (\n      <Row style={{ justifyContent: \"center\", paddingBottom: \"10px\" }}>\n        <h1 className=\"project-heading\" style={{ paddingBottom: \"20px\" }}>\n          Days I <strong className=\"purple\">Code</strong>\n        </h1>\n        <div style={{ textAlign: \"center\", color: \"white\" }}>\n          Loading GitHub activity...\n        </div>\n      </Row>\n    );\n  }\n\n  return (\n    <Row style={{ justifyContent: \"center\", paddingBottom: \"10px\" }}>\n      <h1 className=\"project-heading\" style={{ paddingBottom: \"20px\" }}>\n        Days I <strong className=\"purple\">Code</strong>\n      </h1>\n      <div style={{ \n        display: \"flex\", \n        flexWrap: \"wrap\", \n        justifyContent: \"center\",\n        maxWidth: \"800px\",\n        gap: \"2px\"\n      }}>\n        {contributions.map((contribution, index) => (\n          <div\n            key={index}\n            style={{\n              width: \"12px\",\n              height: \"12px\",\n              backgroundColor: getColor(contribution.level),\n              borderRadius: \"2px\",\n              margin: \"1px\",\n              transition: \"all 0.2s ease\"\n            }}\n            title={`${contribution.date}: ${contribution.count} contributions`}\n          />\n        ))}\n      </div>\n      <div style={{ \n        marginTop: \"20px\", \n        fontSize: \"14px\", \n        color: \"#888\",\n        textAlign: \"center\" \n      }}>\n        <span style={{ display: \"inline-block\", marginRight: \"20px\" }}>\n          <span style={{ \n            display: \"inline-block\", \n            width: \"12px\", \n            height: \"12px\", \n            backgroundColor: \"#ebedf0\", \n            marginRight: \"5px\" \n          }}></span>\n          Less\n        </span>\n        <span style={{ \n          display: \"inline-block\", \n          width: \"12px\", \n          height: \"12px\", \n          backgroundColor: \"#216e39\", \n          marginRight: \"5px\" \n        }}></span>\n        More\n      </div>\n    </Row>\n  );\n}\n\nexport default Github;\n","import React from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport {\n  DiJavascript1,\n  DiNodejs,\n  DiMongodb,\n  DiPython,\n  DiJava\n} from \"react-icons/di\";\n\nimport {\n  SiExpress,\n  SiApachekafka,\n  SiRedis,\n  SiElasticsearch,\n  SiAmazonaws,\n  SiGit,\n  SiGithub,\n  SiDocker,\n  SiPostman\n} from \"react-icons/si\";\n\nconst languages = [\n  {\n    icon: <DiJava />,\n    label: \"Java\",\n  },\n  {\n    icon: <DiJavascript1 />,\n    label: \"JavaScript\",\n  },\n  {\n    icon: <DiPython />,\n    label: \"Python\",\n  }\n];\n\nconst frameworks = [\n  {\n    icon: <DiNodejs />,\n    label: \"Node.js\",\n  },\n  {\n    icon: <SiExpress />,\n    label: \"Express\",\n  }\n];\n\nconst infrastructure = [\n  {\n    icon: <SiApachekafka />,\n    label: \"Kafka\",\n  },\n  {\n    icon: <SiRedis />,\n    label: \"Redis\",\n  },\n  {\n    icon: <DiMongodb />,\n    label: \"MongoDB\",\n  },\n  {\n    icon: <SiElasticsearch />,\n    label: \"Elasticsearch\",\n  },\n  {\n    icon: <SiElasticsearch />,\n    label: \"ELK\",\n  }\n];\n\nconst tools = [\n  {\n    icon: <SiAmazonaws />,\n    label: \"AWS EC2\",\n  },\n  {\n    icon: <SiDocker />,\n    label: \"Docker\",\n  },\n  {\n    icon: <SiGit />,\n    label: \"Git\",\n  },\n  {\n    icon: <SiGithub />,\n    label: \"GitHub\",\n  },\n  {\n    icon: <SiPostman />,\n    label: \"Postman\",\n  }\n];\n\nfunction Techstack() {\n  return (\n    <>\n      <Row style={{ justifyContent: \"center\", paddingBottom: \"50px\" }}>\n      <h1 className=\"project-heading\" style={{ paddingBottom: \"20px\" }}>\n          Languages\n        </h1>\n        {\n          languages.map(stack => (\n            <Col key={stack.label} xs={4} md={2} className=\"tech-icons\">\n              <div className=\"skill glass light\">\n                {stack.icon}\n                <p>{stack.label}</p>\n              </div>\n            </Col>\n          ))\n        }\n      </Row>\n      <Row style={{ justifyContent: \"center\", paddingBottom: \"50px\" }}>\n      <h1 className=\"project-heading\" style={{ paddingBottom: \"20px\" }}>\n          Infrastructure\n        </h1>\n        {\n          infrastructure.map(stack => (\n            <Col key={stack.label} xs={4} md={2} className=\"tech-icons\">\n              <div className=\"skill glass light\">\n                {stack.icon}\n                <p>{stack.label}</p>\n              </div>\n            </Col>\n          ))\n        }\n      </Row>\n      <Row style={{ justifyContent: \"center\", paddingBottom: \"50px\" }}>\n      <h1 className=\"project-heading\" style={{ paddingBottom: \"20px\" }}>\n          Frameworks\n        </h1>\n        {\n          frameworks.map(stack => (\n            <Col key={stack.label} xs={4} md={2} className=\"tech-icons\">\n              <div className=\"skill glass light\">\n                {stack.icon}\n                <p>{stack.label}</p>\n              </div>\n            </Col>\n          ))\n        }\n      </Row>\n      <Row style={{ justifyContent: \"center\", paddingBottom: \"50px\" }}>\n      <h1 className=\"project-heading\" style={{ paddingBottom: \"20px\" }}>\n          Tools\n        </h1>\n        {\n          tools.map(stack => (\n            <Col key={stack.label} xs={4} md={2} className=\"tech-icons\">\n              <div className=\"skill glass light\">\n                {stack.icon}\n                <p>{stack.label}</p>\n              </div>\n            </Col>\n          ))\n        }\n      </Row>\n    </>\n  );\n}\n\nexport default Techstack;\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport Github from \"./Github\";\nimport Techstack from \"./Techstack\";\n\nfunction Skills() {\n  return (\n    <Container id=\"skills\" fluid className=\"about-section second-color\">\n      <h1 className=\"project-heading\">\n        Professional <strong className=\"purple\">Skillset </strong>\n      </h1>\n\n      <Techstack />\n\n      <Github />\n    </Container>\n  );\n}\n\nexport default Skills;\n"],"names":["useState","contributions","setContributions","loading","setLoading","useEffect","fetchContributions","usernames","Promise","all","map","username","fetch","then","res","json","allData","merged","mergeContributions","console","error","generateMockContributions","data1","data2","today","Date","dateMap","addEvents","data","forEach","event","date","created_at","toISOString","split","i","setDate","getDate","dateStr","count","unshift","level","Math","min","random","getColor","colors","Row","style","justifyContent","paddingBottom","className","textAlign","color","display","flexWrap","maxWidth","gap","contribution","index","width","height","backgroundColor","borderRadius","margin","transition","title","marginTop","fontSize","marginRight","languages","icon","label","frameworks","infrastructure","tools","stack","Col","xs","md","Container","id","fluid"],"sourceRoot":""}