{"version":3,"file":"static/js/660.47a15a2d.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/objectSpread2.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","../node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","../node_modules/date-fns/esm/_lib/requiredArgs/index.js","../node_modules/date-fns/esm/_lib/toInteger/index.js","../node_modules/date-fns/esm/addDays/index.js","../node_modules/date-fns/esm/startOfDay/index.js","../node_modules/date-fns/esm/differenceInCalendarDays/index.js","../node_modules/date-fns/esm/eachDayOfInterval/index.js","../node_modules/date-fns/esm/isDate/index.js","../node_modules/date-fns/esm/isValid/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","../node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","../node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","../node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","../node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","../node_modules/date-fns/esm/locale/en-US/index.js","../node_modules/date-fns/esm/addMilliseconds/index.js","../node_modules/date-fns/esm/subMilliseconds/index.js","../node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","../node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","../node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","../node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","../node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","../node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","../node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","../node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","../node_modules/date-fns/esm/_lib/getUTCWeek/index.js","../node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","../node_modules/date-fns/esm/_lib/format/formatters/index.js","../node_modules/date-fns/esm/_lib/format/longFormatters/index.js","../node_modules/date-fns/esm/_lib/protectedTokens/index.js","../node_modules/date-fns/esm/format/index.js","../node_modules/date-fns/esm/formatISO/index.js","../node_modules/date-fns/esm/getDay/index.js","../node_modules/date-fns/esm/getMonth/index.js","../node_modules/date-fns/esm/getYear/index.js","../node_modules/date-fns/esm/nextDay/index.js","../node_modules/date-fns/esm/constants/index.js","../node_modules/date-fns/esm/parseISO/index.js","../node_modules/date-fns/esm/addWeeks/index.js","../node_modules/date-fns/esm/subWeeks/index.js","../node_modules/date-fns/esm/toDate/index.js","../node_modules/react-github-calendar/src/constants.ts","../node_modules/react-github-calendar/src/index.tsx","../node_modules/react-github-calendar/src/utils.ts","../node_modules/react-github-calendar/node_modules/react-activity-calendar/node_modules/style-inject/dist/style-inject.es.js","../node_modules/react-github-calendar/node_modules/react-activity-calendar/src/util.ts","../node_modules/react-github-calendar/node_modules/react-activity-calendar/src/component/ActivityCalendar.tsx","../node_modules/tinycolor2/tinycolor.js"],"sourcesContent":["function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var defineProperty = require(\"./defineProperty.js\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread2, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport default function getTimezoneOffsetInMilliseconds(date) {\n  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} - the new date with the days added\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\n\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport startOfDay from \"../startOfDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_DAY = 86400000;\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\n\nexport default function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var startOfDayLeft = startOfDay(dirtyDateLeft);\n  var startOfDayRight = startOfDay(dirtyDateRight);\n  var timestampLeft = startOfDayLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  var timestampRight = startOfDayRight.getTime() - getTimezoneOffsetInMilliseconds(startOfDayRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachDayOfInterval\n * @category Interval Helpers\n * @summary Return the array of dates within the specified time interval.\n *\n * @description\n * Return the array of dates within the specified time interval.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `eachDay` to `eachDayOfInterval`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   eachDay(new Date(2014, 0, 10), new Date(2014, 0, 20))\n *\n *   // v2.0.0 onward\n *\n *   eachDayOfInterval(\n *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) }\n *   )\n *   ```\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.\n * @returns {Date[]} the array with starts of days from the day of the interval start to the day of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.step` must be a number greater than 1\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each day between 6 October 2014 and 10 October 2014:\n * const result = eachDayOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 9, 10)\n * })\n * //=> [\n * //   Mon Oct 06 2014 00:00:00,\n * //   Tue Oct 07 2014 00:00:00,\n * //   Wed Oct 08 2014 00:00:00,\n * //   Thu Oct 09 2014 00:00:00,\n * //   Fri Oct 10 2014 00:00:00\n * // ]\n */\n\nexport default function eachDayOfInterval(dirtyInterval, options) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  var step = options && 'step' in options ? Number(options.step) : 1;\n  if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setDate(currentDate.getDate() + step);\n    currentDate.setHours(0, 0, 0, 0);\n  }\n\n  return dates;\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {*} value - the value to check\n * @returns {boolean} true if the given value is a date\n * @throws {TypeError} 1 arguments required\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\n\nexport default function isDate(value) {\n  requiredArgs(1, arguments);\n  return value instanceof Date || typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]';\n}","import isDate from \"../isDate/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n\n  if (!isDate(dirtyDate) && typeof dirtyDate !== 'number') {\n    return false;\n  }\n\n  var date = toDate(dirtyDate);\n  return !isNaN(Number(date));\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\n\nvar formatDistance = function (token, count, options) {\n  var result;\n  var tokenValue = formatDistanceLocale[token];\n\n  if (typeof tokenValue === 'string') {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace('{{count}}', count.toString());\n  }\n\n  if (options !== null && options !== void 0 && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n};\n\nexport default formatDistance;","export default function buildFormatLongFn(args) {\n  return function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // TODO: Remove String()\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\n\nvar formatRelative = function (token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n};\n\nexport default formatRelative;","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex; // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n\n    return valuesArray[index];\n  };\n}","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']\n}; // Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\n\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nvar ordinalNumber = function (dirtyNumber, _options) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n};\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return quarter - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","export default function buildMatchFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    }) : findKey(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    });\n    var value;\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}","import buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nimport buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","export default function buildMatchPatternFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCISOWeekYear from \"../getUTCISOWeekYear/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport startOfUTCISOWeekYear from \"../startOfUTCISOWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCWeekYear from \"../getUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport toInteger from \"../toInteger/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport startOfUTCWeekYear from \"../startOfUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import addLeadingZeros from \"../../addLeadingZeros/index.js\";\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function (date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function (date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function (date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function (date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaa':\n        return dayPeriodEnumValue;\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function (date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function (date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function (date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import getUTCDayOfYear from \"../../../_lib/getUTCDayOfYear/index.js\";\nimport getUTCISOWeek from \"../../../_lib/getUTCISOWeek/index.js\";\nimport getUTCISOWeekYear from \"../../../_lib/getUTCISOWeekYear/index.js\";\nimport getUTCWeek from \"../../../_lib/getUTCWeek/index.js\";\nimport getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport addLeadingZeros from \"../../addLeadingZeros/index.js\";\nimport lightFormatters from \"../lightFormatters/index.js\";\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n};\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nvar formatters = {\n  // Era\n  G: function (date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function (date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function (date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function (date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function (date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function (date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function (date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/) || [];\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  }\n}","import isValid from \"../isValid/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport formatters from \"../_lib/format/formatters/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\"; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import toDate from \"../toDate/index.js\";\nimport addLeadingZeros from \"../_lib/addLeadingZeros/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name formatISO\n * @category Common Helpers\n * @summary Format the date according to the ISO 8601 standard (https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a003169814.htm).\n *\n * @description\n * Return the formatted date string in ISO 8601 format. Options may be passed to control the parts and notations of the date.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {'extended'|'basic'} [options.format='extended'] - if 'basic', hide delimiters between date and time values.\n * @param {'complete'|'date'|'time'} [options.representation='complete'] - format date, time with local time zone, or both.\n * @returns {String} the formatted date string (in local time zone)\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.format` must be 'extended' or 'basic'\n * @throws {RangeError} `options.represenation` must be 'date', 'time' or 'complete'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format (local time zone is UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52))\n * //=> '2019-09-18T19:00:52Z'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601, short format (local time zone is UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })\n * //=> '20190918T190052'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format, date only:\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })\n * //=> '2019-09-18'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format, time only (local time zone is UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })\n * //=> '19:00:52Z'\n */\n\nexport default function formatISO(date, options) {\n  requiredArgs(1, arguments);\n  var originalDate = toDate(date);\n\n  if (isNaN(originalDate.getTime())) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var format = !(options !== null && options !== void 0 && options.format) ? 'extended' : String(options.format);\n  var representation = !(options !== null && options !== void 0 && options.representation) ? 'complete' : String(options.representation);\n\n  if (format !== 'extended' && format !== 'basic') {\n    throw new RangeError(\"format must be 'extended' or 'basic'\");\n  }\n\n  if (representation !== 'date' && representation !== 'time' && representation !== 'complete') {\n    throw new RangeError(\"representation must be 'date', 'time', or 'complete'\");\n  }\n\n  var result = '';\n  var tzOffset = '';\n  var dateDelimiter = format === 'extended' ? '-' : '';\n  var timeDelimiter = format === 'extended' ? ':' : ''; // Representation is either 'date' or 'complete'\n\n  if (representation !== 'time') {\n    var day = addLeadingZeros(originalDate.getDate(), 2);\n    var month = addLeadingZeros(originalDate.getMonth() + 1, 2);\n    var year = addLeadingZeros(originalDate.getFullYear(), 4); // yyyyMMdd or yyyy-MM-dd.\n\n    result = \"\".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);\n  } // Representation is either 'time' or 'complete'\n\n\n  if (representation !== 'date') {\n    // Add the timezone.\n    var offset = originalDate.getTimezoneOffset();\n\n    if (offset !== 0) {\n      var absoluteOffset = Math.abs(offset);\n      var hourOffset = addLeadingZeros(Math.floor(absoluteOffset / 60), 2);\n      var minuteOffset = addLeadingZeros(absoluteOffset % 60, 2); // If less than 0, the sign is +, because it is ahead of time.\n\n      var sign = offset < 0 ? '+' : '-';\n      tzOffset = \"\".concat(sign).concat(hourOffset, \":\").concat(minuteOffset);\n    } else {\n      tzOffset = 'Z';\n    }\n\n    var hour = addLeadingZeros(originalDate.getHours(), 2);\n    var minute = addLeadingZeros(originalDate.getMinutes(), 2);\n    var second = addLeadingZeros(originalDate.getSeconds(), 2); // If there's also date, separate it with time with 'T'\n\n    var separator = result === '' ? '' : 'T'; // Creates a time string consisting of hour, minute, and second, separated by delimiters, if defined.\n\n    var time = [hour, minute, second].join(timeDelimiter); // HHmmss or HH:mm:ss.\n\n    result = \"\".concat(result).concat(separator).concat(time).concat(tzOffset);\n  }\n\n  return result;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getDay\n * @category Weekday Helpers\n * @summary Get the day of the week of the given date.\n *\n * @description\n * Get the day of the week of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {0|1|2|3|4|5|6} the day of week, 0 represents Sunday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the week is 29 February 2012?\n * const result = getDay(new Date(2012, 1, 29))\n * //=> 3\n */\n\nexport default function getDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  return day;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getMonth\n * @category Month Helpers\n * @summary Get the month of the given date.\n *\n * @description\n * Get the month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which month is 29 February 2012?\n * const result = getMonth(new Date(2012, 1, 29))\n * //=> 1\n */\n\nexport default function getMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  return month;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name getYear\n * @category Year Helpers\n * @summary Get the year of the given date.\n *\n * @description\n * Get the year of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which year is 2 July 2014?\n * const result = getYear(new Date(2014, 6, 2))\n * //=> 2014\n */\n\nexport default function getYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  return toDate(dirtyDate).getFullYear();\n}","import addDays from \"../addDays/index.js\";\nimport getDay from \"../getDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name nextDay\n * @category Weekday Helpers\n * @summary When is the next day of the week?\n *\n * @description\n * When is the next day of the week? 0-6 the day of the week, 0 represents Sunday.\n *\n * @param {Date | number} date - the date to check\n * @param {Day} day - day of the week\n * @returns {Date} - the date is the next day of week\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // When is the next Monday after Mar, 20, 2020?\n * const result = nextDay(new Date(2020, 2, 20), 1)\n * //=> Mon Mar 23 2020 00:00:00\n *\n * @example\n * // When is the next Tuesday after Mar, 21, 2020?\n * const result = nextDay(new Date(2020, 2, 21), 2)\n * //=> Tue Mar 24 2020 00:00:00\n */\n\nexport default function nextDay(date, day) {\n  requiredArgs(2, arguments);\n  var delta = day - getDay(date);\n  if (delta <= 0) delta += 7;\n  return addDays(date, delta);\n}","/**\n * Days in 1 week.\n *\n * @name daysInWeek\n * @constant\n * @type {number}\n * @default\n */\nexport var daysInWeek = 7;\n/**\n * Maximum allowed time.\n *\n * @name maxTime\n * @constant\n * @type {number}\n * @default\n */\n\nexport var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n/**\n * Milliseconds in 1 minute\n *\n * @name millisecondsInMinute\n * @constant\n * @type {number}\n * @default\n */\n\nexport var millisecondsInMinute = 60000;\n/**\n * Milliseconds in 1 hour\n *\n * @name millisecondsInHour\n * @constant\n * @type {number}\n * @default\n */\n\nexport var millisecondsInHour = 3600000;\n/**\n * Milliseconds in 1 second\n *\n * @name millisecondsInSecond\n * @constant\n * @type {number}\n * @default\n */\n\nexport var millisecondsInSecond = 1000;\n/**\n * Minimum allowed time.\n *\n * @name minTime\n * @constant\n * @type {number}\n * @default\n */\n\nexport var minTime = -maxTime;\n/**\n * Minutes in 1 hour\n *\n * @name minutesInHour\n * @constant\n * @type {number}\n * @default\n */\n\nexport var minutesInHour = 60;\n/**\n * Months in 1 quarter\n *\n * @name monthsInQuarter\n * @constant\n * @type {number}\n * @default\n */\n\nexport var monthsInQuarter = 3;\n/**\n * Months in 1 year\n *\n * @name monthsInYear\n * @constant\n * @type {number}\n * @default\n */\n\nexport var monthsInYear = 12;\n/**\n * Quarters in 1 year\n *\n * @name quartersInYear\n * @constant\n * @type {number}\n * @default\n */\n\nexport var quartersInYear = 4;\n/**\n * Seconds in 1 hour\n *\n * @name secondsInHour\n * @constant\n * @type {number}\n * @default\n */\n\nexport var secondsInHour = 3600;\n/**\n * Seconds in 1 minute\n *\n * @name secondsInMinute\n * @constant\n * @type {number}\n * @default\n */\n\nexport var secondsInMinute = 60;","import { millisecondsInHour, millisecondsInMinute } from \"../constants/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The previous `parse` implementation was renamed to `parseISO`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   parseISO('2016-01-01')\n *   ```\n *\n * - `parseISO` now validates separate date and time values in ISO-8601 strings\n *   and returns `Invalid Date` if the date is invalid.\n *\n *   ```javascript\n *   parseISO('2018-13-32')\n *   //=> Invalid Date\n *   ```\n *\n * - `parseISO` now doesn't fall back to `new Date` constructor\n *   if it fails to parse a string argument. Instead, it returns `Invalid Date`.\n *\n * @param {String} argument - the value to convert\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * const result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * const result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\n\nexport default function parseISO(argument, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var additionalDigits = options.additionalDigits == null ? 2 : toInteger(options.additionalDigits);\n\n  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n    throw new RangeError('additionalDigits must be 0, 1 or 2');\n  }\n\n  if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {\n    return new Date(NaN);\n  }\n\n  var dateStrings = splitDateString(argument);\n  var date;\n\n  if (dateStrings.date) {\n    var parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (!date || isNaN(date.getTime())) {\n    return new Date(NaN);\n  }\n\n  var timestamp = date.getTime();\n  var time = 0;\n  var offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n\n    if (isNaN(time)) {\n      return new Date(NaN);\n    }\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    var dirtyDate = new Date(timestamp + time); // js parsed string assuming it's in UTC timezone\n    // but we need it to be parsed in our timezone\n    // so we use utc values to build date in our timezone.\n    // Year values from 0 to 99 map to the years 1900 to 1999\n    // so set year explicitly with setFullYear.\n\n    var result = new Date(0);\n    result.setFullYear(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate());\n    result.setHours(dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());\n    return result;\n  }\n\n  return new Date(timestamp + time + offset);\n}\nvar patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/\n};\nvar dateRegex = /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nvar timeRegex = /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nvar timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n\nfunction splitDateString(dateString) {\n  var dateStrings = {};\n  var array = dateString.split(patterns.dateTimeDelimiter);\n  var timeString; // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(dateStrings.date.length, dateString.length);\n    }\n  }\n\n  if (timeString) {\n    var token = patterns.timezone.exec(timeString);\n\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '');\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  var regex = new RegExp('^(?:(\\\\d{4}|[+-]\\\\d{' + (4 + additionalDigits) + '})|(\\\\d{2}|[+-]\\\\d{' + (2 + additionalDigits) + '})$)');\n  var captures = dateString.match(regex); // Invalid ISO-formatted year\n\n  if (!captures) return {\n    year: NaN,\n    restDateString: ''\n  };\n  var year = captures[1] ? parseInt(captures[1]) : null;\n  var century = captures[2] ? parseInt(captures[2]) : null; // either year or century is null, not both\n\n  return {\n    year: century === null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length)\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return new Date(NaN);\n  var captures = dateString.match(dateRegex); // Invalid ISO-formatted string\n\n  if (!captures) return new Date(NaN);\n  var isWeekDate = !!captures[4];\n  var dayOfYear = parseDateUnit(captures[1]);\n  var month = parseDateUnit(captures[2]) - 1;\n  var day = parseDateUnit(captures[3]);\n  var week = parseDateUnit(captures[4]);\n  var dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    var date = new Date(0);\n\n    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {\n      return new Date(NaN);\n    }\n\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  var captures = timeString.match(timeRegex);\n  if (!captures) return NaN; // Invalid ISO-formatted time\n\n  var hours = parseTimeUnit(captures[1]);\n  var minutes = parseTimeUnit(captures[2]);\n  var seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1000;\n}\n\nfunction parseTimeUnit(value) {\n  return value && parseFloat(value.replace(',', '.')) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === 'Z') return 0;\n  var captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n  var sign = captures[1] === '+' ? -1 : 1;\n  var hours = parseInt(captures[2]);\n  var minutes = captures[3] && parseInt(captures[3]) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  var date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  var fourthOfJanuaryDay = date.getUTCDay() || 7;\n  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n} // Validation functions\n// February is null to handle the leap year (using ||)\n\n\nvar daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n\nfunction validateDate(year, month, date) {\n  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addDays from \"../addDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addWeeks\n * @category Week Helpers\n * @summary Add the specified number of weeks to the given date.\n *\n * @description\n * Add the specified number of week to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the weeks added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 4 weeks to 1 September 2014:\n * const result = addWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Sep 29 2014 00:00:00\n */\n\nexport default function addWeeks(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  var days = amount * 7;\n  return addDays(dirtyDate, days);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addWeeks from \"../addWeeks/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subWeeks\n * @category Week Helpers\n * @summary Subtract the specified number of weeks from the given date.\n *\n * @description\n * Subtract the specified number of weeks from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the weeks subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 4 weeks from 1 September 2014:\n * const result = subWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Aug 04 2014 00:00:00\n */\n\nexport default function subWeeks(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addWeeks(dirtyDate, -amount);\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","// GitHub theme\nimport { Theme } from 'react-activity-calendar';\n\nexport const API_URL = 'https://github-contributions-api.jogruber.de/v4/';\n\nexport const DEFAULT_THEME: Theme = {\n  level4: '#216e39',\n  level3: '#30a14e',\n  level2: '#40c463',\n  level1: '#9be9a8',\n  level0: '#ebedf0',\n};\n","import React, { FunctionComponent, useCallback, useEffect, useState } from 'react';\nimport Calendar, {\n  CalendarData,\n  createCalendarTheme,\n  Props as CalendarProps,\n  Skeleton,\n} from 'react-activity-calendar';\n\nimport { API_URL, DEFAULT_THEME } from './constants';\nimport { ApiErrorResponse, ApiResponse, Year } from './types';\nimport { transformData } from './utils';\n\nexport interface Props extends Omit<CalendarProps, 'data'> {\n  username: string;\n  year?: Year;\n  transformData?: (data: CalendarData) => CalendarData;\n}\n\nasync function fetchCalendarData(username: string, year: Year): Promise<ApiResponse> {\n  const response = await fetch(`${API_URL}${username}?y=${year}`);\n  const data: ApiResponse | ApiErrorResponse = await response.json();\n\n  if (!response.ok) {\n    throw new Error((data as ApiErrorResponse).error);\n  }\n\n  return data as ApiResponse;\n}\n\nconst GitHubCalendar: FunctionComponent<Props> = ({\n  username,\n  year = 'last',\n  transformData: transformDataProp,\n  ...props\n}) => {\n  const [data, setData] = useState<CalendarData | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<Error | null>(null);\n\n  const transformDataCallback = useCallback(\n    (contributions: CalendarData) => transformData(contributions, transformDataProp),\n    [transformDataProp],\n  );\n\n  const fetchData = useCallback(() => {\n    setLoading(true);\n    setError(null);\n    fetchCalendarData(username, year)\n      .then(({ contributions }) => setData(transformDataCallback(contributions)))\n      .catch(setError)\n      .finally(() => setLoading(false));\n  }, [username, year, transformDataCallback]);\n\n  useEffect(fetchData, [fetchData]);\n\n  if (error) {\n    return (\n      <div>\n        <i>Unable to fetch contribution data. See console.</i>\n      </div>\n    );\n  }\n\n  if (loading || !data) {\n    return <Skeleton {...props} loading />;\n  }\n\n  const theme = props.color ? undefined : props.theme ?? DEFAULT_THEME;\n\n  const labels = {\n    totalCount: `{{count}} contributions in ${year === 'last' ? 'the last year' : '{{year}}'}`,\n  };\n\n  return <Calendar data={data} theme={theme} labels={labels} {...props} />;\n};\n\nexport { createCalendarTheme };\nexport default GitHubCalendar;\n","import { CalendarData } from 'react-activity-calendar';\n\nimport { Props } from './index';\n\nexport const transformData = (\n  data: CalendarData,\n  transformFn?: Props['transformData'],\n): CalendarData => {\n  if (typeof transformFn !== 'function') {\n    return data;\n  }\n\n  const transformedData = transformFn(data);\n\n  if (!Array.isArray(transformedData)) {\n    throw new Error(`Passed function transformData must return a list of Day objects.`);\n  }\n\n  if (transformedData.length > 0) {\n    const testObj = transformedData[0];\n\n    if (typeof testObj.count !== 'number' || testObj.count < 0) {\n      throw new Error(\n        `Required property \"count: number\" missing or invalid. Got: ${testObj.count}`,\n      );\n    }\n\n    if (typeof testObj.date !== 'string' || !/(\\d{4})-(\\d{2})-(\\d{2})/.test(testObj.date)) {\n      throw new Error(\n        `Required property \"date: YYYY-MM-DD\" missing or invalid. Got: ${testObj.date}`,\n      );\n    }\n\n    if (typeof testObj.level !== 'number' || testObj.level < 0 || testObj.level > 4) {\n      throw new Error(\n        `Required property \"level: 0 | 1 | 2 | 3 | 4\" missing or invalid: Got: ${testObj.level}.`,\n      );\n    }\n  }\n\n  return transformedData;\n};\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import color, { ColorInput } from 'tinycolor2';\nimport differenceInCalendarDays from 'date-fns/differenceInCalendarDays';\nimport eachDayOfInterval from 'date-fns/eachDayOfInterval';\nimport formatISO from 'date-fns/formatISO';\nimport getDay from 'date-fns/getDay';\nimport getMonth from 'date-fns/getMonth';\nimport nextDay from 'date-fns/nextDay';\nimport parseISO from 'date-fns/parseISO';\nimport subWeeks from 'date-fns/subWeeks';\nimport type { Day as WeekDay } from 'date-fns';\n\nimport { Day, Weeks, Theme } from './types';\n\nexport const NAMESPACE = 'react-activity-calendar';\nexport const MIN_DISTANCE_MONTH_LABELS = 2;\n\nconst DEFAULT_THEME = createCalendarTheme('#042a33');\n\ninterface Label {\n  x: number;\n  y: number;\n  text: string;\n}\n\nexport function groupByWeeks(\n  days: Array<Day>,\n  weekStart: WeekDay = 0, // 0 = Sunday\n): Weeks {\n  if (days.length === 0) {\n    return [];\n  }\n\n  // The calendar expects a continuous sequence of days, so fill gaps with empty activity.\n  const normalizedDays = normalizeCalendarDays(days);\n\n  // Determine the first date of the calendar. If the first contribution date is not\n  // specified week day the desired day one week earlier will be selected.\n  const firstDate = parseISO(normalizedDays[0].date);\n  const firstCalendarDate =\n    getDay(firstDate) === weekStart ? firstDate : subWeeks(nextDay(firstDate, weekStart), 1);\n\n  // In order to correctly group contributions by week it is necessary to left pad the list,\n  // because the first date might not be desired week day.\n  const paddedDays = [\n    ...Array(differenceInCalendarDays(firstDate, firstCalendarDate)).fill(undefined),\n    ...normalizedDays,\n  ];\n\n  return Array(Math.ceil(paddedDays.length / 7))\n    .fill(undefined)\n    .map((_, calendarWeek) => paddedDays.slice(calendarWeek * 7, calendarWeek * 7 + 7));\n}\n\nfunction normalizeCalendarDays(days: Array<Day>): Array<Day> {\n  const daysMap = days.reduce((map, day) => {\n    map.set(day.date, day);\n    return map;\n  }, new Map<string, Day>());\n\n  return eachDayOfInterval({\n    start: parseISO(days[0].date),\n    end: parseISO(days[days.length - 1].date),\n  }).map(day => {\n    const date = formatISO(day, { representation: 'date' });\n\n    if (daysMap.has(date)) {\n      return daysMap.get(date) as Day;\n    }\n\n    return {\n      date,\n      count: 0,\n      level: 0,\n    };\n  });\n}\n\nexport function getMonthLabels(\n  weeks: Weeks,\n  monthNames: Array<string> = DEFAULT_MONTH_LABELS,\n): Array<Label> {\n  return weeks\n    .reduce<Array<Label>>((labels, week, index) => {\n      const firstWeekDay = week.find(day => day !== undefined);\n\n      if (!firstWeekDay) {\n        throw new Error(`Unexpected error: Week is empty: [${week}]`);\n      }\n\n      const month = monthNames[getMonth(parseISO(firstWeekDay.date))];\n      const prev = labels[labels.length - 1];\n\n      if (index === 0 || prev.text !== month) {\n        return [\n          ...labels,\n          {\n            x: index,\n            y: 0,\n            text: month,\n          },\n        ];\n      }\n\n      return labels;\n    }, [])\n    .filter((label, index, labels) => {\n      if (index === 0) {\n        return labels[1] && labels[1].x - label.x > MIN_DISTANCE_MONTH_LABELS;\n      }\n\n      return true;\n    });\n}\n\nexport function createCalendarTheme(\n  baseColor: ColorInput,\n  emptyColor = color('white').darken(8).toHslString(),\n): Theme {\n  const base = color(baseColor);\n\n  if (!base.isValid()) {\n    return DEFAULT_THEME;\n  }\n\n  return {\n    level4: base.setAlpha(0.92).toHslString(),\n    level3: base.setAlpha(0.76).toHslString(),\n    level2: base.setAlpha(0.6).toHslString(),\n    level1: base.setAlpha(0.44).toHslString(),\n    level0: emptyColor,\n  };\n}\n\nexport function getTheme(theme?: Theme, color?: ColorInput): Theme {\n  if (theme) {\n    return Object.assign({}, DEFAULT_THEME, theme);\n  }\n\n  if (color) {\n    return createCalendarTheme(color);\n  }\n\n  return DEFAULT_THEME;\n}\n\nexport function getClassName(name: string, styles?: string): string {\n  if (styles) {\n    return `${NAMESPACE}__${name} ${styles}`;\n  }\n\n  return `${NAMESPACE}__${name}`;\n}\n\nexport function generateEmptyData(): Array<Day> {\n  const year = new Date().getFullYear();\n  const days = eachDayOfInterval({\n    start: new Date(year, 0, 1),\n    end: new Date(year, 11, 31),\n  });\n\n  return days.map(date => ({\n    date: formatISO(date, { representation: 'date' }),\n    count: 0,\n    level: 0,\n  }));\n}\n\nexport const DEFAULT_MONTH_LABELS = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\n\nexport const DEFAULT_WEEKDAY_LABELS = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\nexport const DEFAULT_LABELS = {\n  months: DEFAULT_MONTH_LABELS,\n  weekdays: DEFAULT_WEEKDAY_LABELS,\n  totalCount: '{{count}} contributions in {{year}}',\n  legend: {\n    less: 'Less',\n    more: 'More',\n  },\n};\n","import React, { FunctionComponent, CSSProperties, ReactNode } from 'react';\nimport tinycolor, { ColorInput } from 'tinycolor2';\nimport format from 'date-fns/format';\nimport getDay from 'date-fns/getDay';\nimport getYear from 'date-fns/getYear';\nimport parseISO from 'date-fns/parseISO';\nimport type { Day as WeekDay } from 'date-fns';\n\nimport styles from './styles.css';\n\nimport { Day, EventHandlerMap, Labels, ReactEvent, SVGRectEventHandler, Theme } from '../types';\nimport {\n  generateEmptyData,\n  getClassName,\n  getMonthLabels,\n  getTheme,\n  groupByWeeks,\n  MIN_DISTANCE_MONTH_LABELS,\n  NAMESPACE,\n  DEFAULT_WEEKDAY_LABELS,\n  DEFAULT_LABELS,\n} from '../util';\n\ntype CalendarData = Array<Day>;\n\nexport interface Props {\n  /**\n   * List of calendar entries. Every `Day` object requires an ISO 8601 `date`\n   * property in the format `yyyy-MM-dd`, a `count` property with the amount\n   * of tracked data and finally a `level` property in the range `0 - 4` to\n   * specify activity intensity.\n   *\n   * Example object:\n   *\n   * ```json\n   * {\n   *   date: \"2021-02-20\",\n   *   count: 16,\n   *   level: 3\n   * }\n   * ```\n   */\n  data: CalendarData;\n  /**\n   * Margin between blocks in pixels.\n   */\n  blockMargin?: number;\n  /**\n   * Border radius of blocks in pixels.\n   */\n  blockRadius?: number;\n  /**\n   * Block size in pixels.\n   */\n  blockSize?: number;\n  /**\n   * Pass `<ReactTooltip html />` as child to show tooltips.\n   */\n  children?: ReactNode;\n  /**\n   * Base color to compute graph intensity hues (darkest color). Any valid CSS color is accepted\n   */\n  color?: ColorInput;\n  /**\n   * A date-fns/format compatible date string used in tooltips.\n   */\n  dateFormat?: string;\n  /**\n   * Event handlers to register for the SVG `<rect>` elements that are used to render the calendar days. Handler signature: `event => data => void`\n   */\n  eventHandlers?: EventHandlerMap;\n  /**\n   * Font size for text in pixels.\n   */\n  fontSize?: number;\n  /**\n   * Toggle to hide color legend below calendar.\n   */\n  hideColorLegend?: boolean;\n  /**\n   * Toggle to hide month labels above calendar.\n   */\n  hideMonthLabels?: boolean;\n  /**\n   * Toggle to hide total count below calendar.\n   */\n  hideTotalCount?: boolean;\n  /**\n   * Localization strings for all calendar labels. `totalCount` supports the placeholders `{{count}}` and `{{year}}`:\n   */\n  labels?: Labels;\n  /**\n   * Toggle for loading state. `data` property will be ignored if set.\n   */\n  loading?: boolean;\n  /**\n   * Toggle to show weekday labels left to the calendar.\n   */\n  showWeekdayLabels?: boolean;\n  /**\n   * Style object to pass to component container.\n   */\n  style?: CSSProperties;\n  /**\n   * An object specifying all theme colors explicitly`.\n   */\n  theme?: Theme;\n  /**\n   * Index of day to be used as start of week. 0 represents Sunday.\n   */\n  weekStart?: WeekDay;\n}\n\nconst ActivityCalendar: FunctionComponent<Props> = ({\n  data,\n  blockMargin = 4,\n  blockRadius = 2,\n  blockSize = 12,\n  children,\n  color = undefined,\n  dateFormat = 'MMM do, yyyy',\n  eventHandlers = {},\n  fontSize = 14,\n  hideColorLegend = false,\n  hideMonthLabels = false,\n  hideTotalCount = false,\n  labels: labelsProp,\n  loading = false,\n  showWeekdayLabels = false,\n  style = {},\n  theme: themeProp,\n  weekStart = 0, // Sunday\n}: Props) => {\n  if (loading) {\n    data = generateEmptyData();\n  }\n\n  if (data.length === 0) {\n    return null;\n  }\n\n  const weeks = groupByWeeks(data, weekStart);\n  const totalCount = data.reduce((sum, day) => sum + day.count, 0);\n  const year = getYear(parseISO(data[0]?.date));\n\n  const theme = getTheme(themeProp, color);\n  const labels = Object.assign({}, DEFAULT_LABELS, labelsProp);\n  const textHeight = hideMonthLabels ? 0 : fontSize + 2 * blockMargin;\n\n  function getDimensions() {\n    return {\n      width: weeks.length * (blockSize + blockMargin) - blockMargin,\n      height: textHeight + (blockSize + blockMargin) * 7 - blockMargin,\n    };\n  }\n\n  function getTooltipMessage(contribution: Day) {\n    const date = format(parseISO(contribution.date), dateFormat);\n    return `<strong>${contribution.count} contributions</strong> on ${date}`;\n  }\n\n  function getEventHandlers(data: Day): SVGRectEventHandler {\n    return (\n      Object.keys(eventHandlers) as Array<keyof SVGRectEventHandler>\n    ).reduce<SVGRectEventHandler>(\n      (handlers, key) => ({\n        ...handlers,\n        [key]: (event: ReactEvent<SVGRectElement>) => eventHandlers[key]?.(event)(data),\n      }),\n      {},\n    );\n  }\n\n  function renderLabels() {\n    const style = {\n      fontSize,\n    };\n\n    if (!showWeekdayLabels && hideMonthLabels) {\n      return null;\n    }\n\n    return (\n      <>\n        {showWeekdayLabels && (\n          <g className={getClassName('legend-weekday')} style={style}>\n            {weeks[1].map((day, y) => {\n              if (!day || y % 2 === 0) {\n                return null;\n              }\n\n              const dayIndex = getDay(parseISO(day.date));\n\n              return (\n                <text\n                  x={-2 * blockMargin}\n                  y={textHeight + (fontSize / 2 + blockMargin) + (blockSize + blockMargin) * y}\n                  textAnchor=\"end\"\n                  key={day.date}\n                >\n                  {labels.weekdays ? labels.weekdays[dayIndex] : DEFAULT_WEEKDAY_LABELS[dayIndex]}\n                </text>\n              );\n            })}\n          </g>\n        )}\n        {!hideMonthLabels && (\n          <g className={getClassName('legend-month')} style={style}>\n            {getMonthLabels(weeks, labels.months).map(({ text, x }, index, labels) => {\n              // Skip the first month label if there's not enough space to the next one\n              if (index === 0 && labels[1] && labels[1].x - x <= MIN_DISTANCE_MONTH_LABELS) {\n                return null;\n              }\n\n              return (\n                <text x={(blockSize + blockMargin) * x} alignmentBaseline=\"hanging\" key={x}>\n                  {text}\n                </text>\n              );\n            })}\n          </g>\n        )}\n      </>\n    );\n  }\n\n  function renderBlocks() {\n    return weeks\n      .map((week, weekIndex) =>\n        week.map((day, dayIndex) => {\n          if (!day) {\n            return null;\n          }\n\n          const style = loading\n            ? {\n                animation: `${styles.loadingAnimation} 1.5s ease-in-out infinite`,\n                animationDelay: `${weekIndex * 20 + dayIndex * 20}ms`,\n              }\n            : undefined;\n\n          return (\n            <rect\n              {...getEventHandlers(day)}\n              x={0}\n              y={textHeight + (blockSize + blockMargin) * dayIndex}\n              width={blockSize}\n              height={blockSize}\n              fill={theme[`level${day.level}` as keyof Theme]}\n              rx={blockRadius}\n              ry={blockRadius}\n              className={styles.block}\n              data-date={day.date}\n              data-tip={children ? getTooltipMessage(day) : undefined}\n              key={day.date}\n              style={style}\n            />\n          );\n        }),\n      )\n      .map((week, x) => (\n        <g key={x} transform={`translate(${(blockSize + blockMargin) * x}, 0)`}>\n          {week}\n        </g>\n      ));\n  }\n\n  function renderFooter() {\n    if (hideTotalCount && hideColorLegend) {\n      return null;\n    }\n\n    return (\n      <footer\n        className={getClassName('footer', styles.footer)}\n        style={{ marginTop: 2 * blockMargin, fontSize }}\n      >\n        {/* Placeholder */}\n        {loading && <div>&nbsp;</div>}\n\n        {!loading && !hideTotalCount && (\n          <div className={getClassName('count')}>\n            {labels.totalCount\n              ? labels.totalCount\n                  .replace('{{count}}', String(totalCount))\n                  .replace('{{year}}', String(year))\n              : `${totalCount} contributions in ${year}`}\n          </div>\n        )}\n\n        {!loading && !hideColorLegend && (\n          <div className={getClassName('legend-colors', styles.legendColors)}>\n            <span style={{ marginRight: '0.4em' }}>{labels?.legend?.less ?? 'Less'}</span>\n            {Array(5)\n              .fill(undefined)\n              .map((_, index) => (\n                <svg width={blockSize} height={blockSize} key={index}>\n                  <rect\n                    width={blockSize}\n                    height={blockSize}\n                    fill={theme[`level${index}` as keyof Theme]}\n                    rx={blockRadius}\n                    ry={blockRadius}\n                  />\n                </svg>\n              ))}\n            <span style={{ marginLeft: '0.4em' }}>{labels?.legend?.more ?? 'More'}</span>\n          </div>\n        )}\n      </footer>\n    );\n  }\n\n  const { width, height } = getDimensions();\n  const additionalStyles = {\n    maxWidth: width,\n    // Required for correct colors in CSS loading animation\n    [`--${NAMESPACE}-loading`]: theme.level0,\n    [`--${NAMESPACE}-loading-active`]: tinycolor(theme.level0).darken(8).toString(),\n  };\n\n  return (\n    <article className={NAMESPACE} style={{ ...style, ...additionalStyles }}>\n      <svg\n        width={width}\n        height={height}\n        viewBox={`0 0 ${width} ${height}`}\n        className={getClassName('calendar', styles.calendar)}\n      >\n        {!loading && renderLabels()}\n        {renderBlocks()}\n      </svg>\n      {renderFooter()}\n      {children}\n    </article>\n  );\n};\n\nexport const Skeleton: FunctionComponent<Omit<Props, 'data'>> = props => (\n  <ActivityCalendar data={[]} {...props} />\n);\n\nexport default ActivityCalendar;\n","// TinyColor v1.4.2\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n\n(function(Math) {\n\nvar trimLeft = /^\\s+/,\n    trimRight = /\\s+$/,\n    tinyCounter = 0,\n    mathRound = Math.round,\n    mathMin = Math.min,\n    mathMax = Math.max,\n    mathRandom = Math.random;\n\nfunction tinycolor (color, opts) {\n\n    color = (color) ? color : '';\n    opts = opts || { };\n\n    // If input is already a tinycolor, return itself\n    if (color instanceof tinycolor) {\n       return color;\n    }\n    // If we are called as a function, call using new instead\n    if (!(this instanceof tinycolor)) {\n        return new tinycolor(color, opts);\n    }\n\n    var rgb = inputToRGB(color);\n    this._originalInput = color,\n    this._r = rgb.r,\n    this._g = rgb.g,\n    this._b = rgb.b,\n    this._a = rgb.a,\n    this._roundA = mathRound(100*this._a) / 100,\n    this._format = opts.format || rgb.format;\n    this._gradientType = opts.gradientType;\n\n    // Don't let the range of [0,255] come back in [0,1].\n    // Potentially lose a little bit of precision here, but will fix issues where\n    // .5 gets interpreted as half of the total, instead of half of 1\n    // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n    if (this._r < 1) { this._r = mathRound(this._r); }\n    if (this._g < 1) { this._g = mathRound(this._g); }\n    if (this._b < 1) { this._b = mathRound(this._b); }\n\n    this._ok = rgb.ok;\n    this._tc_id = tinyCounter++;\n}\n\ntinycolor.prototype = {\n    isDark: function() {\n        return this.getBrightness() < 128;\n    },\n    isLight: function() {\n        return !this.isDark();\n    },\n    isValid: function() {\n        return this._ok;\n    },\n    getOriginalInput: function() {\n      return this._originalInput;\n    },\n    getFormat: function() {\n        return this._format;\n    },\n    getAlpha: function() {\n        return this._a;\n    },\n    getBrightness: function() {\n        //http://www.w3.org/TR/AERT#color-contrast\n        var rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    },\n    getLuminance: function() {\n        //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        var rgb = this.toRgb();\n        var RsRGB, GsRGB, BsRGB, R, G, B;\n        RsRGB = rgb.r/255;\n        GsRGB = rgb.g/255;\n        BsRGB = rgb.b/255;\n\n        if (RsRGB <= 0.03928) {R = RsRGB / 12.92;} else {R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);}\n        if (GsRGB <= 0.03928) {G = GsRGB / 12.92;} else {G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);}\n        if (BsRGB <= 0.03928) {B = BsRGB / 12.92;} else {B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);}\n        return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);\n    },\n    setAlpha: function(value) {\n        this._a = boundAlpha(value);\n        this._roundA = mathRound(100*this._a) / 100;\n        return this;\n    },\n    toHsv: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\n    },\n    toHsvString: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\n        return (this._a == 1) ?\n          \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\n          \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\n    },\n    toHsl: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\n    },\n    toHslString: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\n        return (this._a == 1) ?\n          \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\n          \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\n    },\n    toHex: function(allow3Char) {\n        return rgbToHex(this._r, this._g, this._b, allow3Char);\n    },\n    toHexString: function(allow3Char) {\n        return '#' + this.toHex(allow3Char);\n    },\n    toHex8: function(allow4Char) {\n        return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n    },\n    toHex8String: function(allow4Char) {\n        return '#' + this.toHex8(allow4Char);\n    },\n    toRgb: function() {\n        return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\n    },\n    toRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\n          \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\n    },\n    toPercentageRgb: function() {\n        return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\n    },\n    toPercentageRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\n          \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n    },\n    toName: function() {\n        if (this._a === 0) {\n            return \"transparent\";\n        }\n\n        if (this._a < 1) {\n            return false;\n        }\n\n        return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n    },\n    toFilter: function(secondColor) {\n        var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n        var secondHex8String = hex8String;\n        var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n        if (secondColor) {\n            var s = tinycolor(secondColor);\n            secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n        }\n\n        return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\n    },\n    toString: function(format) {\n        var formatSet = !!format;\n        format = format || this._format;\n\n        var formattedString = false;\n        var hasAlpha = this._a < 1 && this._a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n\n        if (needsAlphaFormat) {\n            // Special case for \"transparent\", all other non-alpha formats\n            // will return rgba when there is transparency.\n            if (format === \"name\" && this._a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === \"rgb\") {\n            formattedString = this.toRgbString();\n        }\n        if (format === \"prgb\") {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === \"hex\" || format === \"hex6\") {\n            formattedString = this.toHexString();\n        }\n        if (format === \"hex3\") {\n            formattedString = this.toHexString(true);\n        }\n        if (format === \"hex4\") {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === \"hex8\") {\n            formattedString = this.toHex8String();\n        }\n        if (format === \"name\") {\n            formattedString = this.toName();\n        }\n        if (format === \"hsl\") {\n            formattedString = this.toHslString();\n        }\n        if (format === \"hsv\") {\n            formattedString = this.toHsvString();\n        }\n\n        return formattedString || this.toHexString();\n    },\n    clone: function() {\n        return tinycolor(this.toString());\n    },\n\n    _applyModification: function(fn, args) {\n        var color = fn.apply(null, [this].concat([].slice.call(args)));\n        this._r = color._r;\n        this._g = color._g;\n        this._b = color._b;\n        this.setAlpha(color._a);\n        return this;\n    },\n    lighten: function() {\n        return this._applyModification(lighten, arguments);\n    },\n    brighten: function() {\n        return this._applyModification(brighten, arguments);\n    },\n    darken: function() {\n        return this._applyModification(darken, arguments);\n    },\n    desaturate: function() {\n        return this._applyModification(desaturate, arguments);\n    },\n    saturate: function() {\n        return this._applyModification(saturate, arguments);\n    },\n    greyscale: function() {\n        return this._applyModification(greyscale, arguments);\n    },\n    spin: function() {\n        return this._applyModification(spin, arguments);\n    },\n\n    _applyCombination: function(fn, args) {\n        return fn.apply(null, [this].concat([].slice.call(args)));\n    },\n    analogous: function() {\n        return this._applyCombination(analogous, arguments);\n    },\n    complement: function() {\n        return this._applyCombination(complement, arguments);\n    },\n    monochromatic: function() {\n        return this._applyCombination(monochromatic, arguments);\n    },\n    splitcomplement: function() {\n        return this._applyCombination(splitcomplement, arguments);\n    },\n    triad: function() {\n        return this._applyCombination(triad, arguments);\n    },\n    tetrad: function() {\n        return this._applyCombination(tetrad, arguments);\n    }\n};\n\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\n// String input requires \"1.0\" as input, so 1 will be treated as 1\ntinycolor.fromRatio = function(color, opts) {\n    if (typeof color == \"object\") {\n        var newColor = {};\n        for (var i in color) {\n            if (color.hasOwnProperty(i)) {\n                if (i === \"a\") {\n                    newColor[i] = color[i];\n                }\n                else {\n                    newColor[i] = convertToPercentage(color[i]);\n                }\n            }\n        }\n        color = newColor;\n    }\n\n    return tinycolor(color, opts);\n};\n\n// Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     \"red\"\n//     \"#f00\" or \"f00\"\n//     \"#ff0000\" or \"ff0000\"\n//     \"#ff000000\" or \"ff000000\"\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n//\nfunction inputToRGB(color) {\n\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n\n    if (typeof color == \"string\") {\n        color = stringInputToObject(color);\n    }\n\n    if (typeof color == \"object\") {\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n            rgb = rgbToRgb(color.r, color.g, color.b);\n            ok = true;\n            format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n            s = convertToPercentage(color.s);\n            v = convertToPercentage(color.v);\n            rgb = hsvToRgb(color.h, s, v);\n            ok = true;\n            format = \"hsv\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n            s = convertToPercentage(color.s);\n            l = convertToPercentage(color.l);\n            rgb = hslToRgb(color.h, s, l);\n            ok = true;\n            format = \"hsl\";\n        }\n\n        if (color.hasOwnProperty(\"a\")) {\n            a = color.a;\n        }\n    }\n\n    a = boundAlpha(a);\n\n    return {\n        ok: ok,\n        format: color.format || format,\n        r: mathMin(255, mathMax(rgb.r, 0)),\n        g: mathMin(255, mathMax(rgb.g, 0)),\n        b: mathMin(255, mathMax(rgb.b, 0)),\n        a: a\n    };\n}\n\n\n// Conversion Functions\n// --------------------\n\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n// `rgbToRgb`\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\nfunction rgbToRgb(r, g, b){\n    return {\n        r: bound01(r, 255) * 255,\n        g: bound01(g, 255) * 255,\n        b: bound01(b, 255) * 255\n    };\n}\n\n// `rgbToHsl`\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\nfunction rgbToHsl(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, l = (max + min) / 2;\n\n    if(max == min) {\n        h = s = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n\n        h /= 6;\n    }\n\n    return { h: h, s: s, l: l };\n}\n\n// `hslToRgb`\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hslToRgb(h, s, l) {\n    var r, g, b;\n\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n\n    function hue2rgb(p, q, t) {\n        if(t < 0) t += 1;\n        if(t > 1) t -= 1;\n        if(t < 1/6) return p + (q - p) * 6 * t;\n        if(t < 1/2) return q;\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n        return p;\n    }\n\n    if(s === 0) {\n        r = g = b = l; // achromatic\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1/3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1/3);\n    }\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nfunction rgbToHsv(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, v = max;\n\n    var d = max - min;\n    s = max === 0 ? 0 : d / max;\n\n    if(max == min) {\n        h = 0; // achromatic\n    }\n    else {\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\n function hsvToRgb(h, s, v) {\n\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n\n    var i = Math.floor(h),\n        f = h - i,\n        p = v * (1 - s),\n        q = v * (1 - f * s),\n        t = v * (1 - (1 - f) * s),\n        mod = i % 6,\n        r = [v, q, p, p, t, v][mod],\n        g = [t, v, v, q, p, p][mod],\n        b = [p, p, t, v, v, q][mod];\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHex`\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\nfunction rgbToHex(r, g, b, allow3Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    // Return a 3 character hex if possible\n    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToHex`\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16)),\n        pad2(convertDecimalToHex(a))\n    ];\n\n    // Return a 4 character hex if possible\n    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToArgbHex`\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for \"toFilter()\"\nfunction rgbaToArgbHex(r, g, b, a) {\n\n    var hex = [\n        pad2(convertDecimalToHex(a)),\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    return hex.join(\"\");\n}\n\n// `equals`\n// Can be called with any tinycolor input\ntinycolor.equals = function (color1, color2) {\n    if (!color1 || !color2) { return false; }\n    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n};\n\ntinycolor.random = function() {\n    return tinycolor.fromRatio({\n        r: mathRandom(),\n        g: mathRandom(),\n        b: mathRandom()\n    });\n};\n\n\n// Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\nfunction desaturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction saturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction greyscale(color) {\n    return tinycolor(color).desaturate(100);\n}\n\nfunction lighten (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\nfunction brighten(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var rgb = tinycolor(color).toRgb();\n    rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\n    rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\n    rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\n    return tinycolor(rgb);\n}\n\nfunction darken (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\nfunction spin(color, amount) {\n    var hsl = tinycolor(color).toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return tinycolor(hsl);\n}\n\n// Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\nfunction complement(color) {\n    var hsl = tinycolor(color).toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return tinycolor(hsl);\n}\n\nfunction triad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction tetrad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction splitcomplement(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\n        tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\n    ];\n}\n\nfunction analogous(color, results, slices) {\n    results = results || 6;\n    slices = slices || 30;\n\n    var hsl = tinycolor(color).toHsl();\n    var part = 360 / slices;\n    var ret = [tinycolor(color)];\n\n    for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\n        hsl.h = (hsl.h + part) % 360;\n        ret.push(tinycolor(hsl));\n    }\n    return ret;\n}\n\nfunction monochromatic(color, results) {\n    results = results || 6;\n    var hsv = tinycolor(color).toHsv();\n    var h = hsv.h, s = hsv.s, v = hsv.v;\n    var ret = [];\n    var modification = 1 / results;\n\n    while (results--) {\n        ret.push(tinycolor({ h: h, s: s, v: v}));\n        v = (v + modification) % 1;\n    }\n\n    return ret;\n}\n\n// Utility Functions\n// ---------------------\n\ntinycolor.mix = function(color1, color2, amount) {\n    amount = (amount === 0) ? 0 : (amount || 50);\n\n    var rgb1 = tinycolor(color1).toRgb();\n    var rgb2 = tinycolor(color2).toRgb();\n\n    var p = amount / 100;\n\n    var rgba = {\n        r: ((rgb2.r - rgb1.r) * p) + rgb1.r,\n        g: ((rgb2.g - rgb1.g) * p) + rgb1.g,\n        b: ((rgb2.b - rgb1.b) * p) + rgb1.b,\n        a: ((rgb2.a - rgb1.a) * p) + rgb1.a\n    };\n\n    return tinycolor(rgba);\n};\n\n\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n// `contrast`\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\ntinycolor.readability = function(color1, color2) {\n    var c1 = tinycolor(color1);\n    var c2 = tinycolor(color2);\n    return (Math.max(c1.getLuminance(),c2.getLuminance())+0.05) / (Math.min(c1.getLuminance(),c2.getLuminance())+0.05);\n};\n\n// `isReadable`\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n// *Example*\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\ntinycolor.isReadable = function(color1, color2, wcag2) {\n    var readability = tinycolor.readability(color1, color2);\n    var wcag2Parms, out;\n\n    out = false;\n\n    wcag2Parms = validateWCAG2Parms(wcag2);\n    switch (wcag2Parms.level + wcag2Parms.size) {\n        case \"AAsmall\":\n        case \"AAAlarge\":\n            out = readability >= 4.5;\n            break;\n        case \"AAlarge\":\n            out = readability >= 3;\n            break;\n        case \"AAAsmall\":\n            out = readability >= 7;\n            break;\n    }\n    return out;\n\n};\n\n// `mostReadable`\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\ntinycolor.mostReadable = function(baseColor, colorList, args) {\n    var bestColor = null;\n    var bestScore = 0;\n    var readability;\n    var includeFallbackColors, level, size ;\n    args = args || {};\n    includeFallbackColors = args.includeFallbackColors ;\n    level = args.level;\n    size = args.size;\n\n    for (var i= 0; i < colorList.length ; i++) {\n        readability = tinycolor.readability(baseColor, colorList[i]);\n        if (readability > bestScore) {\n            bestScore = readability;\n            bestColor = tinycolor(colorList[i]);\n        }\n    }\n\n    if (tinycolor.isReadable(baseColor, bestColor, {\"level\":level,\"size\":size}) || !includeFallbackColors) {\n        return bestColor;\n    }\n    else {\n        args.includeFallbackColors=false;\n        return tinycolor.mostReadable(baseColor,[\"#fff\", \"#000\"],args);\n    }\n};\n\n\n// Big List of Colors\n// ------------------\n// <http://www.w3.org/TR/css3-color/#svg-color>\nvar names = tinycolor.names = {\n    aliceblue: \"f0f8ff\",\n    antiquewhite: \"faebd7\",\n    aqua: \"0ff\",\n    aquamarine: \"7fffd4\",\n    azure: \"f0ffff\",\n    beige: \"f5f5dc\",\n    bisque: \"ffe4c4\",\n    black: \"000\",\n    blanchedalmond: \"ffebcd\",\n    blue: \"00f\",\n    blueviolet: \"8a2be2\",\n    brown: \"a52a2a\",\n    burlywood: \"deb887\",\n    burntsienna: \"ea7e5d\",\n    cadetblue: \"5f9ea0\",\n    chartreuse: \"7fff00\",\n    chocolate: \"d2691e\",\n    coral: \"ff7f50\",\n    cornflowerblue: \"6495ed\",\n    cornsilk: \"fff8dc\",\n    crimson: \"dc143c\",\n    cyan: \"0ff\",\n    darkblue: \"00008b\",\n    darkcyan: \"008b8b\",\n    darkgoldenrod: \"b8860b\",\n    darkgray: \"a9a9a9\",\n    darkgreen: \"006400\",\n    darkgrey: \"a9a9a9\",\n    darkkhaki: \"bdb76b\",\n    darkmagenta: \"8b008b\",\n    darkolivegreen: \"556b2f\",\n    darkorange: \"ff8c00\",\n    darkorchid: \"9932cc\",\n    darkred: \"8b0000\",\n    darksalmon: \"e9967a\",\n    darkseagreen: \"8fbc8f\",\n    darkslateblue: \"483d8b\",\n    darkslategray: \"2f4f4f\",\n    darkslategrey: \"2f4f4f\",\n    darkturquoise: \"00ced1\",\n    darkviolet: \"9400d3\",\n    deeppink: \"ff1493\",\n    deepskyblue: \"00bfff\",\n    dimgray: \"696969\",\n    dimgrey: \"696969\",\n    dodgerblue: \"1e90ff\",\n    firebrick: \"b22222\",\n    floralwhite: \"fffaf0\",\n    forestgreen: \"228b22\",\n    fuchsia: \"f0f\",\n    gainsboro: \"dcdcdc\",\n    ghostwhite: \"f8f8ff\",\n    gold: \"ffd700\",\n    goldenrod: \"daa520\",\n    gray: \"808080\",\n    green: \"008000\",\n    greenyellow: \"adff2f\",\n    grey: \"808080\",\n    honeydew: \"f0fff0\",\n    hotpink: \"ff69b4\",\n    indianred: \"cd5c5c\",\n    indigo: \"4b0082\",\n    ivory: \"fffff0\",\n    khaki: \"f0e68c\",\n    lavender: \"e6e6fa\",\n    lavenderblush: \"fff0f5\",\n    lawngreen: \"7cfc00\",\n    lemonchiffon: \"fffacd\",\n    lightblue: \"add8e6\",\n    lightcoral: \"f08080\",\n    lightcyan: \"e0ffff\",\n    lightgoldenrodyellow: \"fafad2\",\n    lightgray: \"d3d3d3\",\n    lightgreen: \"90ee90\",\n    lightgrey: \"d3d3d3\",\n    lightpink: \"ffb6c1\",\n    lightsalmon: \"ffa07a\",\n    lightseagreen: \"20b2aa\",\n    lightskyblue: \"87cefa\",\n    lightslategray: \"789\",\n    lightslategrey: \"789\",\n    lightsteelblue: \"b0c4de\",\n    lightyellow: \"ffffe0\",\n    lime: \"0f0\",\n    limegreen: \"32cd32\",\n    linen: \"faf0e6\",\n    magenta: \"f0f\",\n    maroon: \"800000\",\n    mediumaquamarine: \"66cdaa\",\n    mediumblue: \"0000cd\",\n    mediumorchid: \"ba55d3\",\n    mediumpurple: \"9370db\",\n    mediumseagreen: \"3cb371\",\n    mediumslateblue: \"7b68ee\",\n    mediumspringgreen: \"00fa9a\",\n    mediumturquoise: \"48d1cc\",\n    mediumvioletred: \"c71585\",\n    midnightblue: \"191970\",\n    mintcream: \"f5fffa\",\n    mistyrose: \"ffe4e1\",\n    moccasin: \"ffe4b5\",\n    navajowhite: \"ffdead\",\n    navy: \"000080\",\n    oldlace: \"fdf5e6\",\n    olive: \"808000\",\n    olivedrab: \"6b8e23\",\n    orange: \"ffa500\",\n    orangered: \"ff4500\",\n    orchid: \"da70d6\",\n    palegoldenrod: \"eee8aa\",\n    palegreen: \"98fb98\",\n    paleturquoise: \"afeeee\",\n    palevioletred: \"db7093\",\n    papayawhip: \"ffefd5\",\n    peachpuff: \"ffdab9\",\n    peru: \"cd853f\",\n    pink: \"ffc0cb\",\n    plum: \"dda0dd\",\n    powderblue: \"b0e0e6\",\n    purple: \"800080\",\n    rebeccapurple: \"663399\",\n    red: \"f00\",\n    rosybrown: \"bc8f8f\",\n    royalblue: \"4169e1\",\n    saddlebrown: \"8b4513\",\n    salmon: \"fa8072\",\n    sandybrown: \"f4a460\",\n    seagreen: \"2e8b57\",\n    seashell: \"fff5ee\",\n    sienna: \"a0522d\",\n    silver: \"c0c0c0\",\n    skyblue: \"87ceeb\",\n    slateblue: \"6a5acd\",\n    slategray: \"708090\",\n    slategrey: \"708090\",\n    snow: \"fffafa\",\n    springgreen: \"00ff7f\",\n    steelblue: \"4682b4\",\n    tan: \"d2b48c\",\n    teal: \"008080\",\n    thistle: \"d8bfd8\",\n    tomato: \"ff6347\",\n    turquoise: \"40e0d0\",\n    violet: \"ee82ee\",\n    wheat: \"f5deb3\",\n    white: \"fff\",\n    whitesmoke: \"f5f5f5\",\n    yellow: \"ff0\",\n    yellowgreen: \"9acd32\"\n};\n\n// Make it easy to access colors via `hexNames[hex]`\nvar hexNames = tinycolor.hexNames = flip(names);\n\n\n// Utilities\n// ---------\n\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\nfunction flip(o) {\n    var flipped = { };\n    for (var i in o) {\n        if (o.hasOwnProperty(i)) {\n            flipped[o[i]] = i;\n        }\n    }\n    return flipped;\n}\n\n// Return a valid alpha value [0,1] with all invalid values being set to 1\nfunction boundAlpha(a) {\n    a = parseFloat(a);\n\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n\n    return a;\n}\n\n// Take input from [0, n] and return it as [0, 1]\nfunction bound01(n, max) {\n    if (isOnePointZero(n)) { n = \"100%\"; }\n\n    var processPercent = isPercentage(n);\n    n = mathMin(max, mathMax(0, parseFloat(n)));\n\n    // Automatically convert percentage into number\n    if (processPercent) {\n        n = parseInt(n * max, 10) / 100;\n    }\n\n    // Handle floating point rounding errors\n    if ((Math.abs(n - max) < 0.000001)) {\n        return 1;\n    }\n\n    // Convert into [0, 1] range if it isn't already\n    return (n % max) / parseFloat(max);\n}\n\n// Force a number between 0 and 1\nfunction clamp01(val) {\n    return mathMin(1, mathMax(0, val));\n}\n\n// Parse a base-16 hex value into a base-10 integer\nfunction parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nfunction isOnePointZero(n) {\n    return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\n}\n\n// Check to see if string passed in is a percentage\nfunction isPercentage(n) {\n    return typeof n === \"string\" && n.indexOf('%') != -1;\n}\n\n// Force a hex value to have 2 characters\nfunction pad2(c) {\n    return c.length == 1 ? '0' + c : '' + c;\n}\n\n// Replace a decimal with it's percentage value\nfunction convertToPercentage(n) {\n    if (n <= 1) {\n        n = (n * 100) + \"%\";\n    }\n\n    return n;\n}\n\n// Converts a decimal to a hex value\nfunction convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\n// Converts a hex value to a decimal\nfunction convertHexToDecimal(h) {\n    return (parseIntFromHex(h) / 255);\n}\n\nvar matchers = (function() {\n\n    // <http://www.w3.org/TR/css3-values/#integers>\n    var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n    // <http://www.w3.org/TR/css3-values/#number-value>\n    var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n    var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n    // Actual matching.\n    // Parentheses and commas are optional, but not required.\n    // Whitespace can take the place of commas or opening paren\n    var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n    var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n\n    return {\n        CSS_UNIT: new RegExp(CSS_UNIT),\n        rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n        rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n        hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n        hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n        hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n        hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n        hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n        hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n    };\n})();\n\n// `isValidCSSUnit`\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see `matchers` above for definition).\nfunction isValidCSSUnit(color) {\n    return !!matchers.CSS_UNIT.exec(color);\n}\n\n// `stringInputToObject`\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\nfunction stringInputToObject(color) {\n\n    color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();\n    var named = false;\n    if (names[color]) {\n        color = names[color];\n        named = true;\n    }\n    else if (color == 'transparent') {\n        return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\n    }\n\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match;\n    if ((match = matchers.rgb.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3] };\n    }\n    if ((match = matchers.rgba.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsl.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3] };\n    }\n    if ((match = matchers.hsla.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsv.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3] };\n    }\n    if ((match = matchers.hsva.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    if ((match = matchers.hex8.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            a: convertHexToDecimal(match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex6.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n    if ((match = matchers.hex4.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            a: convertHexToDecimal(match[4] + '' + match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex3.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n\n    return false;\n}\n\nfunction validateWCAG2Parms(parms) {\n    // return valid WCAG2 parms for isReadable.\n    // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n    var level, size;\n    parms = parms || {\"level\":\"AA\", \"size\":\"small\"};\n    level = (parms.level || \"AA\").toUpperCase();\n    size = (parms.size || \"small\").toLowerCase();\n    if (level !== \"AA\" && level !== \"AAA\") {\n        level = \"AA\";\n    }\n    if (size !== \"small\" && size !== \"large\") {\n        size = \"small\";\n    }\n    return {\"level\":level, \"size\":size};\n}\n\n// Node: Export function\nif (typeof module !== \"undefined\" && module.exports) {\n    module.exports = tinycolor;\n}\n// AMD/requirejs: Define the module\nelse if (typeof define === 'function' && define.amd) {\n    define(function () {return tinycolor;});\n}\n// Browser: Expose to window\nelse {\n    window.tinycolor = tinycolor;\n}\n\n})(Math);\n"],"names":["module","exports","arr","len","length","i","arr2","Array","__esModule","arrayLikeToArray","isArray","obj","key","value","Object","defineProperty","enumerable","configurable","writable","iter","Symbol","iterator","from","TypeError","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","target","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","o","minLen","n","prototype","toString","call","slice","constructor","name","test","addLeadingZeros","number","targetLength","sign","output","Math","abs","getTimezoneOffsetInMilliseconds","date","utcDate","Date","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","getTime","requiredArgs","required","args","toInteger","dirtyNumber","NaN","Number","isNaN","ceil","floor","addDays","dirtyDate","dirtyAmount","toDate","amount","setDate","startOfDay","setHours","MILLISECONDS_IN_DAY","differenceInCalendarDays","dirtyDateLeft","dirtyDateRight","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","round","eachDayOfInterval","dirtyInterval","options","interval","startDate","start","endDate","end","endTime","RangeError","dates","currentDate","step","isDate","isValid","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","token","count","result","tokenValue","replace","addSuffix","comparison","buildFormatLongFn","undefined","width","String","defaultWidth","format","formats","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","_date","_baseDate","_options","buildLocalizeFn","dirtyIndex","dirtyOptions","valuesArray","context","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","ordinalNumber","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","findIndex","pattern","findKey","valueCallback","rest","predicate","hasOwnProperty","array","parsePattern","parseInt","parseResult","any","index","code","formatDistance","formatLong","formatRelative","localize","weekStartsOn","firstWeekContainsDate","addMilliseconds","timestamp","subMilliseconds","startOfUTCISOWeek","getUTCDay","diff","setUTCDate","getUTCDate","setUTCHours","getUTCISOWeekYear","year","getUTCFullYear","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfUTCISOWeekYear","fourthOfJanuary","MILLISECONDS_IN_WEEK","startOfUTCWeek","locale","localeWeekStartsOn","defaultWeekStartsOn","getUTCWeekYear","localeFirstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","startOfUTCWeekYear","firstWeek","y","signedYear","M","getUTCMonth","d","a","dayPeriodEnumValue","getUTCHours","toUpperCase","h","H","m","getUTCMinutes","s","getUTCSeconds","S","numberOfDigits","milliseconds","getUTCMilliseconds","fractionalSeconds","pow","dayPeriodEnum","formatters","G","unit","lightFormatters","Y","signedWeekYear","weekYear","twoDigitYear","R","isoWeekYear","u","Q","q","L","w","week","getUTCWeek","I","isoWeek","getUTCISOWeek","D","dayOfYear","setUTCMonth","startOfYearTimestamp","difference","getUTCDayOfYear","E","dayOfWeek","e","localDayOfWeek","c","isoDayOfWeek","toLowerCase","b","hours","B","K","k","X","_localize","timezoneOffset","_originalDate","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","originalDate","T","offset","dirtyDelimiter","absOffset","minutes","delimiter","dateLongFormatter","timeLongFormatter","longFormatters","p","P","dateTimeFormat","datePattern","timePattern","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","indexOf","isProtectedWeekYearToken","throwProtectedError","input","concat","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","dirtyFormatStr","formatStr","defaultLocale","formatterOptions","map","substring","firstCharacter","longFormatter","join","cleanEscapedString","formatter","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","formatISO","representation","tzOffset","dateDelimiter","timeDelimiter","absoluteOffset","hourOffset","minuteOffset","hour","minute","second","separator","getDay","getYear","nextDay","delta","millisecondsInHour","parseISO","argument","additionalDigits","dateStrings","splitDateString","parseYearResult","parseYear","parseDate","restDateString","parseTime","timezone","setFullYear","parseTimezone","patterns","dateTimeDelimiter","timeZoneDelimiter","dateRegex","timeRegex","timezoneRegex","dateString","timeString","split","substr","exec","regex","RegExp","captures","century","isWeekDate","parseDateUnit","_year","validateWeekDate","fourthOfJanuaryDay","dayOfISOWeekYear","daysInMonths","isLeapYearIndex","validateDate","validateDayOfYearDate","max","parseTimeUnit","seconds","validateTime","parseFloat","timezoneString","_hours","validateTimezone","addWeeks","days","subWeeks","argStr","console","warn","Error","stack","API_URL","DEFAULT_THEME","level4","level3","level2","level1","level0","username","fetch","response","json","data","ok","error","GitHubCalendar","transformDataProp","transformData","props","useState","setData","loading","setLoading","setError","transformDataCallback","useCallback","contributions","transformFn","transformedData","testObj","level","fetchData","fetchCalendarData","then","catch","finally","useEffect","React","Skeleton","theme","color","labels","totalCount","Calendar","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","NAMESPACE","createCalendarTheme","normalizeCalendarDays","daysMap","reduce","set","Map","has","get","baseColor","emptyColor","darken","toHslString","base","setAlpha","getClassName","styles","DEFAULT_MONTH_LABELS","DEFAULT_WEEKDAY_LABELS","DEFAULT_LABELS","months","weekdays","legend","less","more","ActivityCalendar","_ref","blockMargin","blockRadius","blockSize","children","dateFormat","eventHandlers","fontSize","hideColorLegend","hideMonthLabels","hideTotalCount","labelsProp","showWeekdayLabels","themeProp","weekStart","generateEmptyData","weeks","normalizedDays","firstDate","firstCalendarDate","paddedDays","fill","_","calendarWeek","groupByWeeks","sum","assign","getTheme","textHeight","getTooltipMessage","contribution","height","additionalStyles","maxWidth","tinycolor","className","viewBox","dayIndex","textAnchor","monthNames","firstWeekDay","find","prev","text","label","getMonthLabels","_ref2","alignmentBaseline","renderLabels","weekIndex","animation","animationDelay","getEventHandlers","handlers","event","rx","ry","transform","marginTop","marginRight","_labels$legend$less","marginLeft","_labels$legend$more","renderFooter","trimLeft","trimRight","tinyCounter","mathRound","mathMin","min","mathMax","mathRandom","random","opts","this","rgb","r","g","v","l","named","names","matchers","rgba","hsl","hsla","hsv","hsva","hex8","parseIntFromHex","convertHexToDecimal","hex6","hex4","hex3","stringInputToObject","isValidCSSUnit","bound01","convertToPercentage","f","mod","hsvToRgb","hue2rgb","hslToRgb","boundAlpha","inputToRGB","_originalInput","_r","_g","_b","_a","_roundA","_format","_gradientType","gradientType","_ok","_tc_id","rgbToHsl","rgbToHsv","rgbToHex","allow3Char","hex","pad2","charAt","rgbaToArgbHex","convertDecimalToHex","desaturate","toHsl","clamp01","saturate","greyscale","lighten","brighten","toRgb","spin","hue","complement","triad","tetrad","splitcomplement","analogous","results","slices","part","ret","monochromatic","toHsv","modification","isDark","getBrightness","isLight","getOriginalInput","getFormat","getAlpha","getLuminance","RsRGB","GsRGB","BsRGB","toHsvString","toHex","toHexString","toHex8","allow4Char","rgbaToHex","toHex8String","toRgbString","toPercentageRgb","toPercentageRgbString","toName","hexNames","toFilter","secondColor","hex8String","secondHex8String","formatSet","formattedString","hasAlpha","clone","_applyModification","fn","_applyCombination","fromRatio","newColor","equals","color1","color2","mix","rgb1","rgb2","readability","c1","c2","isReadable","wcag2","wcag2Parms","out","parms","size","validateWCAG2Parms","mostReadable","colorList","includeFallbackColors","bestColor","bestScore","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","flipped","flip","isOnePointZero","processPercent","isPercentage","val","CSS_UNIT","PERMISSIVE_MATCH3","PERMISSIVE_MATCH4","define"],"sourceRoot":""}